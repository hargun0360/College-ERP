{"ast":null,"code":"var _jsxFileName = \"E:\\\\project1\\\\project\\\\src\\\\Pages\\\\Auth\\\\OTP\\\\OTP.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Image from '../../../Components/UI/Images/Image';\nimport SubmitButton from '../../../Components/UI/Button/Button';\nimport { useForm } from 'react-hook-form';\nimport '../Login/Login.css';\nimport illustrate from '../../../Assets/Imagesused/forgot.png';\nimport '../Forgot/Forgot.css';\nimport './OTP.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OTP = () => {\n  _s();\n\n  var _errors$otp;\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm({\n    mode: \"onTouched\"\n  }); // const onSubmit = (data) => {\n  //     console.log(data);\n  //     reset();\n  // }\n\n  const handleClick = () => {\n    handleSubmit(data => {\n      console.log(data);\n      setDisable(true);\n      setTimeout(() => {\n        setDisable(false);\n      }, 20000);\n    });\n  };\n\n  const [popup, setPopup] = useState(false);\n  const [disable, setDisable] = useState(false);\n  setTimeout(() => {\n    setPopup(true);\n  }, 10000);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"illustration-box\",\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        imge: illustrate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"Login-Box\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Heading2\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"Login-Heading\",\n            children: \"OTP Verification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"para3\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Enter One Time Password(OTP) sent to your email.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"type-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input1\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-field\",\n              size: \"44\",\n              type: \"text\",\n              placeholder: \"Confirmation code\",\n              name: \"otp\",\n              ...register(\"otp\", {\n                required: \"**OTP is required\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"alerts\",\n            children: (_errors$otp = errors.otp) === null || _errors$otp === void 0 ? void 0 : _errors$otp.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Verify-Button\",\n          type: \"submit\",\n          onClick: handleSubmit(d => {\n            console.log(d);\n            reset();\n          }),\n          children: \" Verify \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), popup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Button-Resed\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Resend-Button\",\n          disabled: disable,\n          type: \"submit\",\n          onClick: handleClick,\n          children: \"Resend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OTP, \"rzmtjV0/Wb4StcLA1g9ZJAmsL8U=\", false, function () {\n  return [useForm];\n});\n\n_c = OTP;\nexport default OTP;\n\nvar _c;\n\n$RefreshReg$(_c, \"OTP\");","map":{"version":3,"sources":["E:/project1/project/src/Pages/Auth/OTP/OTP.js"],"names":["React","useState","Image","SubmitButton","useForm","illustrate","OTP","register","handleSubmit","formState","errors","reset","mode","handleClick","data","console","log","setDisable","setTimeout","popup","setPopup","disable","required","otp","message","d"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport Image from '../../../Components/UI/Images/Image'\r\nimport SubmitButton from '../../../Components/UI/Button/Button'\r\nimport { useForm } from 'react-hook-form'\r\nimport '../Login/Login.css'\r\nimport illustrate from '../../../Assets/Imagesused/forgot.png'\r\nimport '../Forgot/Forgot.css'\r\nimport './OTP.css'\r\n\r\nconst OTP = () => {\r\n\r\n    \r\n    const { register, handleSubmit, formState: { errors }, reset } = useForm({\r\n        mode: \"onTouched\"\r\n    });\r\n    // const onSubmit = (data) => {\r\n    //     console.log(data);\r\n    //     reset();\r\n    // }\r\n   const handleClick = ()=>{\r\n       handleSubmit((data)=>{\r\n           console.log(data);\r\n           setDisable(true);\r\n           setTimeout(() => {\r\n            setDisable(false);\r\n        }, 20000);\r\n       })\r\n   }\r\n\r\nconst[popup,setPopup]=useState(false);\r\nconst [disable, setDisable] = useState(false);\r\nsetTimeout(() => {\r\n    setPopup(true);\r\n}, 10000);\r\n\r\n    return (\r\n        <div className='Container'>\r\n            <div className='illustration-box'>\r\n                <Image imge={illustrate} />\r\n            </div>\r\n            <div>\r\n                <form className='Login-Box' onSubmit={handleSubmit}>\r\n                    <div className='Heading2'>\r\n                        <h1 className='Login-Heading'>OTP Verification</h1>\r\n                    </div>\r\n                    <div className='para3'>\r\n                        <p>Enter One Time Password(OTP) sent to your email.</p>\r\n                    </div>\r\n                    <div className='type-box'>\r\n                        <div className='input1'>\r\n                            <input className='input-field' size={\"44\"} type=\"text\" placeholder='Confirmation code' name=\"otp\" {...register(\"otp\", { required: \"**OTP is required\" })}></input>\r\n                        </div>\r\n                        <p className='alerts'>{errors.otp?.message}</p>\r\n\r\n                    </div>\r\n                </form>\r\n\r\n                <div className='Button'>\r\n                <button className=\"Verify-Button\" type='submit' onClick={handleSubmit((d) =>{\r\n                            console.log(d)\r\n                            reset();\r\n                } )} > Verify </button>\r\n\r\n                        </div>\r\n                {popup && <div className='Button-Resed'>\r\n                            <button className=\"Resend-Button\" disabled={disable} type='submit' onClick={handleClick} >Resend</button>\r\n                        </div>}\r\n\r\n                \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OTP\r\n"]},"metadata":{},"sourceType":"module"}