{"ast":null,"code":"var _jsxFileName = \"E:\\\\project1\\\\project\\\\src\\\\Pages\\\\Auth\\\\OTP\\\\OTP.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Image from '../../../Components/UI/Images/Image';\nimport SubmitButton from '../../../Components/UI/Button/Button';\nimport { useForm } from 'react-hook-form';\nimport illustrate from '../../../Assets/Images/forgot.png';\nimport '../Login/Login.css';\nimport AuthService from '../../../ApiServices/AuthService';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport Toaster from '../../../Components/UI/Toaster/Toaster';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Spinner from '../../../Components/UI/Spinner/Spinner';\nimport OtpTimer from 'otp-timer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OTP = () => {\n  _s();\n\n  var _errors$otp;\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm({\n    mode: \"onTouched\"\n  });\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const mystate = useSelector(state => state.emailReducer.email);\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n    setLoading(true);\n    let obj = {\n      email: mystate,\n      otp: data.otp\n    };\n    AuthService.otp(obj).then(res => {\n      if (res.status === 200) {\n        setLoading(false);\n        toast.success(\"Verified Successfully\");\n        console.log(res);\n        navigate(\"/createpass\");\n      }\n    }).catch(error => {\n      console.log(error);\n      console.log(error.response);\n      setLoading(false);\n\n      if (error.response.status === 422) {\n        toast.warn(\"otp expired\");\n      } else if (error.response.status === 420) {\n        toast.warn(\"Wrong otp\");\n      } else if (error.response.status === 500) {\n        toast.error(\"Time out!\");\n      } else {\n        navigate(\"/Page404\");\n      }\n    });\n    reset();\n  };\n\n  const handleClick = () => {\n    setLoading(true);\n    const object = {\n      email: mystate\n    };\n    console.log(object);\n    AuthService.resendotp(object).then(res => {\n      if (res.status === 200) {\n        setLoading(false);\n        toast.success(\"otp sent\");\n        console.log(res);\n      }\n    }).catch(error => {\n      setLoading(false);\n      console.log(error);\n\n      if (error.response.status === 500) {\n        toast.error(\"Time out!\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container\",\n    children: [loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"illustration-box\",\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        imge: illustrate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"Login-Box\",\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Heading1\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"Login-Heading\",\n            children: \"OTP Verification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"para3\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Enter One Time Password(OTP) sent to your email.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"type-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input1\",\n            style: {\n              paddingBottom: \"14px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-field\",\n              size: \"44\",\n              type: \"text\",\n              placeholder: \"Confirmation code\",\n              name: \"otp\",\n              ...register(\"otp\", {\n                required: \"**OTP is required\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"alerts\",\n            children: (_errors$otp = errors.otp) === null || _errors$otp === void 0 ? void 0 : _errors$otp.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Button\",\n            children: /*#__PURE__*/_jsxDEV(SubmitButton, {\n              className: \"Login-Button\",\n              Label: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Forgot-text\",\n          children: /*#__PURE__*/_jsxDEV(OtpTimer, {\n            minutes: 0,\n            seconds: 59,\n            resend: handleClick,\n            text: \"Resend OTP in\",\n            ButtonText: \"Resend OTP\",\n            textColor: \"#1F5B7C\",\n            buttonColor: \"#1F5B7C\",\n            background: \"#ffffff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Toaster, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OTP, \"9P0ofca1mFkoUmr8VhZ2+tFDE+0=\", false, function () {\n  return [useForm, useNavigate, useSelector];\n});\n\n_c = OTP;\nexport default OTP;\n\nvar _c;\n\n$RefreshReg$(_c, \"OTP\");","map":{"version":3,"sources":["E:/project1/project/src/Pages/Auth/OTP/OTP.js"],"names":["React","useState","useEffect","Image","SubmitButton","useForm","illustrate","AuthService","useSelector","useNavigate","Toaster","toast","Spinner","OtpTimer","OTP","register","handleSubmit","formState","errors","reset","mode","navigate","loading","setLoading","mystate","state","emailReducer","email","onSubmit","data","e","preventDefault","obj","otp","then","res","status","success","console","log","catch","error","response","warn","handleClick","object","resendotp","paddingBottom","required","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,qCAAlB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAWC,WAAX,QAA+B,kBAA/B;AACA,OAAOC,OAAP,MAAoB,wCAApB;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,OAAO,uCAAP;AACA,OAAOC,OAAP,MAAoB,wCAApB;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAAA;;AACd,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF,KAArC;AAAiDC,IAAAA;AAAjD,MAA2Dd,OAAO,CAAC;AACrEe,IAAAA,IAAI,EAAE;AAD+D,GAAD,CAAxE;AAGA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMuB,OAAO,GAAGhB,WAAW,CAAEiB,KAAD,IAASA,KAAK,CAACC,YAAN,CAAmBC,KAA7B,CAA3B;;AACA,QAAMC,QAAQ,GAAG,CAACC,IAAD,EAAMC,CAAN,KAAY;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIS,GAAG,GAAC;AACJL,MAAAA,KAAK,EAACH,OADF;AAEJS,MAAAA,GAAG,EAACJ,IAAI,CAACI;AAFL,KAAR;AAIA1B,IAAAA,WAAW,CAAC0B,GAAZ,CAAgBD,GAAhB,EACCE,IADD,CACOC,GAAD,IAAO;AACT,UAAGA,GAAG,CAACC,MAAJ,KAAa,GAAhB,EAAoB;AAChBb,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAZ,QAAAA,KAAK,CAAC0B,OAAN,CAAc,uBAAd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACAd,QAAAA,QAAQ,CAAC,aAAD,CAAR;AACH;AAEJ,KATD,EASGmB,KATH,CASUC,KAAD,IAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACC,QAAlB;AACAnB,MAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,UAAGkB,KAAK,CAACC,QAAN,CAAeN,MAAf,KAA0B,GAA7B,EAAiC;AAC7BzB,QAAAA,KAAK,CAACgC,IAAN,CAAW,aAAX;AACH,OAFD,MAGK,IAAGF,KAAK,CAACC,QAAN,CAAeN,MAAf,KAA0B,GAA7B,EAAiC;AAClCzB,QAAAA,KAAK,CAACgC,IAAN,CAAW,WAAX;AACH,OAFI,MAGA,IAAGF,KAAK,CAACC,QAAN,CAAeN,MAAf,KAA0B,GAA7B,EAAiC;AAClCzB,QAAAA,KAAK,CAAC8B,KAAN,CAAY,WAAZ;AACH,OAFI,MAGD;AACApB,QAAAA,QAAQ,CAAC,UAAD,CAAR;AACH;AACJ,KAzBD;AA0BAF,IAAAA,KAAK;AACR,GAlCD;;AAqCA,QAAMyB,WAAW,GAAG,MAAI;AACpBrB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMsB,MAAM,GAAC;AACTlB,MAAAA,KAAK,EAACH;AADG,KAAb;AAGAc,IAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ;AACAtC,IAAAA,WAAW,CAACuC,SAAZ,CAAsBD,MAAtB,EACCX,IADD,CACOC,GAAD,IAAO;AACT,UAAGA,GAAG,CAACC,MAAJ,KAAa,GAAhB,EAAoB;AAChBb,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAZ,QAAAA,KAAK,CAAC0B,OAAN,CAAc,UAAd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AAEH;AAEJ,KATD,EASGK,KATH,CASUC,KAAD,IAAS;AACdlB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;;AACA,UAAGA,KAAK,CAACC,QAAN,CAAeN,MAAf,KAA0B,GAA7B,EAAiC;AAC7BzB,QAAAA,KAAK,CAAC8B,KAAN,CAAY,WAAZ;AACH;AACJ,KAfD;AAgBH,GAtBD;;AAwBA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,eAEInB,OAAO,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFf,eAII;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEhB;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,WAAhB;AAA4B,QAAA,QAAQ,EAAEU,YAAY,CAACY,QAAD,CAAlD;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACI;AAAI,YAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,QAAf;AAAwB,YAAA,KAAK,EAAE;AAACmB,cAAAA,aAAa,EAAC;AAAf,aAA/B;AAAA,mCACI;AAAO,cAAA,SAAS,EAAC,aAAjB;AAA+B,cAAA,IAAI,EAAE,IAArC;AAA2C,cAAA,IAAI,EAAC,MAAhD;AAAuD,cAAA,WAAW,EAAC,mBAAnE;AAAuF,cAAA,IAAI,EAAC,KAA5F;AAAA,iBAAsGhC,QAAQ,CAAC,KAAD,EAAQ;AAAEiC,gBAAAA,QAAQ,EAAE;AAAZ,eAAR;AAA9G;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAG,YAAA,SAAS,EAAC,QAAb;AAAA,qCAAuB9B,MAAM,CAACe,GAA9B,gDAAuB,YAAYgB;AAAnC;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,mCACI,QAAC,YAAD;AAAc,cAAA,SAAS,EAAC,cAAxB;AAAuC,cAAA,KAAK,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAgBI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACA,QAAC,QAAD;AAAU,YAAA,OAAO,EAAE,CAAnB;AAAsB,YAAA,OAAO,EAAG,EAAhC;AAAoC,YAAA,MAAM,EAAEL,WAA5C;AAAyD,YAAA,IAAI,EAAC,eAA9D;AAA8E,YAAA,UAAU,EAAC,YAAzF;AAAsG,YAAA,SAAS,EAAE,SAAjH;AAA4H,YAAA,WAAW,EAAE,SAAzI;AAAoJ,YAAA,UAAU,EAAE;AAAhK;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ,eA+BY,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YA/BZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH,CAvGD;;GAAM9B,G;UAC+DT,O,EAGhDI,W,EAEDD,W;;;KANdM,G;AAyGN,eAAeA,GAAf","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport Image from '../../../Components/UI/Images/Image'\r\nimport SubmitButton from '../../../Components/UI/Button/Button'\r\nimport { useForm } from 'react-hook-form'\r\nimport illustrate from '../../../Assets/Images/forgot.png'\r\nimport '../Login/Login.css'\r\nimport AuthService from '../../../ApiServices/AuthService'\r\nimport {useSelector} from 'react-redux'\r\nimport  {  useNavigate  } from 'react-router-dom'\r\nimport Toaster from '../../../Components/UI/Toaster/Toaster'\r\nimport {toast} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Spinner from '../../../Components/UI/Spinner/Spinner'\r\nimport OtpTimer from 'otp-timer'\r\nconst OTP = () => {\r\n    const { register, handleSubmit, formState: { errors }, reset } = useForm({\r\n        mode: \"onTouched\"\r\n    });\r\n    const navigate = useNavigate(); \r\n    const [loading, setLoading] = useState(false)\r\n    const mystate = useSelector((state)=>state.emailReducer.email)\r\n    const onSubmit = (data,e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        let obj={\r\n            email:mystate,\r\n            otp:data.otp\r\n        }\r\n        AuthService.otp(obj)\r\n        .then((res)=>{\r\n            if(res.status===200){\r\n                setLoading(false);\r\n                toast.success(\"Verified Successfully\");\r\n                console.log(res);\r\n                navigate(\"/createpass\")\r\n            }\r\n            \r\n        }).catch((error)=>{\r\n            console.log(error);\r\n            console.log(error.response);\r\n            setLoading(false);\r\n            if(error.response.status === 422){\r\n                toast.warn(\"otp expired\");\r\n            }\r\n            else if(error.response.status === 420){\r\n                toast.warn(\"Wrong otp\");\r\n            }\r\n            else if(error.response.status === 500){\r\n                toast.error(\"Time out!\");\r\n            }\r\n            else{\r\n                navigate(\"/Page404\");\r\n            }\r\n        })\r\n        reset();\r\n    }\r\n    \r\n\r\n    const handleClick = ()=>{\r\n        setLoading(true);\r\n        const object={\r\n            email:mystate,\r\n        }\r\n        console.log(object);\r\n        AuthService.resendotp(object)\r\n        .then((res)=>{\r\n            if(res.status===200){\r\n                setLoading(false);\r\n                toast.success(\"otp sent\");\r\n                console.log(res);\r\n                \r\n            }\r\n            \r\n        }).catch((error)=>{\r\n            setLoading(false);\r\n            console.log(error);\r\n            if(error.response.status === 500){\r\n                toast.error(\"Time out!\");\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='Container'>\r\n         {\r\n            loading && <Spinner />\r\n        }\r\n            <div className='illustration-box'>\r\n                <Image imge={illustrate}/>\r\n            </div>\r\n            <div>\r\n                <form className='Login-Box' onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className='Heading1'>\r\n                        <h1 className='Login-Heading'>OTP Verification</h1>\r\n                    </div>\r\n                    <div className='para3'>\r\n                        <p>Enter One Time Password(OTP) sent to your email.</p>\r\n                    </div>\r\n                    <div className='type-box'>\r\n                        <div className='input1' style={{paddingBottom:\"14px\"}}>\r\n                            <input className='input-field' size={\"44\"} type=\"text\" placeholder='Confirmation code' name=\"otp\" {...register(\"otp\", { required: \"**OTP is required\" })}></input>\r\n                        </div>\r\n                        <p className='alerts'>{errors.otp?.message}</p>\r\n                        <div className='Button'>\r\n                            <SubmitButton className=\"Login-Button\" Label=\"Login\" ></SubmitButton>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Forgot-text'>\r\n                    <OtpTimer minutes={0} seconds= {59} resend={handleClick} text=\"Resend OTP in\" ButtonText=\"Resend OTP\" textColor={\"#1F5B7C\"} buttonColor={\"#1F5B7C\"} background={\"#ffffff\"} />\r\n                    </div>\r\n                   \r\n                </form>\r\n\r\n            </div>\r\n                    <Toaster />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OTP\r\n"]},"metadata":{},"sourceType":"module"}