{"ast":null,"code":"import _classCallCheck from \"E:/project1/project/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/project1/project/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"E:/project1/project/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"E:/project1/project/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:/project1/project/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:/project1/project/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport isAbsent from './util/isAbsent';\nimport isSchema from './util/isSchema';\nimport printValue from './util/printValue';\nimport { array as locale } from './locale';\nimport runTests from './util/runTests';\nimport ValidationError from './ValidationError';\nimport BaseSchema from './schema';\nexport function create(type) {\n  return new ArraySchema(type);\n}\n\nvar ArraySchema = /*#__PURE__*/function (_BaseSchema) {\n  _inherits(ArraySchema, _BaseSchema);\n\n  var _super = _createSuper(ArraySchema);\n\n  function ArraySchema(type) {\n    var _this;\n\n    _classCallCheck(this, ArraySchema);\n\n    _this = _super.call(this, {\n      type: 'array'\n    }); // `undefined` specifically means uninitialized, as opposed to\n    // \"no subtype\"\n\n    _this.innerType = void 0;\n    _this.innerType = type;\n\n    _this.withMutation(function () {\n      _this.transform(function (values) {\n        if (typeof values === 'string') try {\n          values = JSON.parse(values);\n        } catch (err) {\n          values = null;\n        }\n        return this.isType(values) ? values : null;\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ArraySchema, [{\n    key: \"_typeCheck\",\n    value: function _typeCheck(v) {\n      return Array.isArray(v);\n    }\n  }, {\n    key: \"_subType\",\n    get: function get() {\n      return this.innerType;\n    }\n  }, {\n    key: \"_cast\",\n    value: function _cast(_value, _opts) {\n      var _this2 = this;\n\n      var value = _get(_getPrototypeOf(ArraySchema.prototype), \"_cast\", this).call(this, _value, _opts); //should ignore nulls here\n\n\n      if (!this._typeCheck(value) || !this.innerType) return value;\n      var isChanged = false;\n      var castArray = value.map(function (v, idx) {\n        var castElement = _this2.innerType.cast(v, _extends({}, _opts, {\n          path: \"\".concat(_opts.path || '', \"[\").concat(idx, \"]\")\n        }));\n\n        if (castElement !== v) {\n          isChanged = true;\n        }\n\n        return castElement;\n      });\n      return isChanged ? castArray : value;\n    }\n  }, {\n    key: \"_validate\",\n    value: function _validate(_value) {\n      var _this3 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var callback = arguments.length > 2 ? arguments[2] : undefined;\n\n      var _options$abortEarly, _options$recursive;\n\n      var errors = [];\n      var sync = options.sync;\n      var path = options.path;\n      var innerType = this.innerType;\n      var endEarly = (_options$abortEarly = options.abortEarly) != null ? _options$abortEarly : this.spec.abortEarly;\n      var recursive = (_options$recursive = options.recursive) != null ? _options$recursive : this.spec.recursive;\n      var originalValue = options.originalValue != null ? options.originalValue : _value;\n\n      _get(_getPrototypeOf(ArraySchema.prototype), \"_validate\", this).call(this, _value, options, function (err, value) {\n        if (err) {\n          if (!ValidationError.isError(err) || endEarly) {\n            return void callback(err, value);\n          }\n\n          errors.push(err);\n        }\n\n        if (!recursive || !innerType || !_this3._typeCheck(value)) {\n          callback(errors[0] || null, value);\n          return;\n        }\n\n        originalValue = originalValue || value; // #950 Ensure that sparse array empty slots are validated\n\n        var tests = new Array(value.length);\n\n        var _loop = function _loop(idx) {\n          var item = value[idx];\n          var path = \"\".concat(options.path || '', \"[\").concat(idx, \"]\"); // object._validate note for isStrict explanation\n\n          var innerOptions = _extends({}, options, {\n            path: path,\n            strict: true,\n            parent: value,\n            index: idx,\n            originalValue: originalValue[idx]\n          });\n\n          tests[idx] = function (_, cb) {\n            return innerType.validate(item, innerOptions, cb);\n          };\n        };\n\n        for (var idx = 0; idx < value.length; idx++) {\n          _loop(idx);\n        }\n\n        runTests({\n          sync: sync,\n          path: path,\n          value: value,\n          errors: errors,\n          endEarly: endEarly,\n          tests: tests\n        }, callback);\n      });\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(spec) {\n      var next = _get(_getPrototypeOf(ArraySchema.prototype), \"clone\", this).call(this, spec);\n\n      next.innerType = this.innerType;\n      return next;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(schema) {\n      var next = _get(_getPrototypeOf(ArraySchema.prototype), \"concat\", this).call(this, schema);\n\n      next.innerType = this.innerType;\n      if (schema.innerType) next.innerType = next.innerType ? // @ts-expect-error Lazy doesn't have concat()\n      next.innerType.concat(schema.innerType) : schema.innerType;\n      return next;\n    }\n  }, {\n    key: \"of\",\n    value: function of(schema) {\n      // FIXME: this should return a new instance of array without the default to be\n      var next = this.clone();\n      if (!isSchema(schema)) throw new TypeError('`array.of()` sub-schema must be a valid yup schema not: ' + printValue(schema)); // FIXME(ts):\n\n      next.innerType = schema;\n      return next;\n    }\n  }, {\n    key: \"length\",\n    value: function length(_length) {\n      var message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : locale.length;\n      return this.test({\n        message: message,\n        name: 'length',\n        exclusive: true,\n        params: {\n          length: _length\n        },\n        test: function test(value) {\n          return isAbsent(value) || value.length === this.resolve(_length);\n        }\n      });\n    }\n  }, {\n    key: \"min\",\n    value: function min(_min, message) {\n      message = message || locale.min;\n      return this.test({\n        message: message,\n        name: 'min',\n        exclusive: true,\n        params: {\n          min: _min\n        },\n        // FIXME(ts): Array<typeof T>\n        test: function test(value) {\n          return isAbsent(value) || value.length >= this.resolve(_min);\n        }\n      });\n    }\n  }, {\n    key: \"max\",\n    value: function max(_max, message) {\n      message = message || locale.max;\n      return this.test({\n        message: message,\n        name: 'max',\n        exclusive: true,\n        params: {\n          max: _max\n        },\n        test: function test(value) {\n          return isAbsent(value) || value.length <= this.resolve(_max);\n        }\n      });\n    }\n  }, {\n    key: \"ensure\",\n    value: function ensure() {\n      var _this4 = this;\n\n      return this.default(function () {\n        return [];\n      }).transform(function (val, original) {\n        // We don't want to return `null` for nullable schema\n        if (_this4._typeCheck(val)) return val;\n        return original == null ? [] : [].concat(original);\n      });\n    }\n  }, {\n    key: \"compact\",\n    value: function compact(rejector) {\n      var reject = !rejector ? function (v) {\n        return !!v;\n      } : function (v, i, a) {\n        return !rejector(v, i, a);\n      };\n      return this.transform(function (values) {\n        return values != null ? values.filter(reject) : values;\n      });\n    }\n  }, {\n    key: \"describe\",\n    value: function describe() {\n      var base = _get(_getPrototypeOf(ArraySchema.prototype), \"describe\", this).call(this);\n\n      if (this.innerType) base.innerType = this.innerType.describe();\n      return base;\n    }\n  }, {\n    key: \"nullable\",\n    value: function nullable() {\n      var isNullable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      return _get(_getPrototypeOf(ArraySchema.prototype), \"nullable\", this).call(this, isNullable);\n    }\n  }, {\n    key: \"defined\",\n    value: function defined() {\n      return _get(_getPrototypeOf(ArraySchema.prototype), \"defined\", this).call(this);\n    }\n  }, {\n    key: \"required\",\n    value: function required(msg) {\n      return _get(_getPrototypeOf(ArraySchema.prototype), \"required\", this).call(this, msg);\n    }\n  }]);\n\n  return ArraySchema;\n}(BaseSchema);\n\nexport { ArraySchema as default };\ncreate.prototype = ArraySchema.prototype; //\n// Interfaces\n//","map":{"version":3,"sources":["E:/project1/project/src/node_modules/yup/es/array.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","isAbsent","isSchema","printValue","array","locale","runTests","ValidationError","BaseSchema","create","type","ArraySchema","innerType","withMutation","transform","values","JSON","parse","err","isType","v","Array","isArray","_value","_opts","value","_typeCheck","isChanged","castArray","map","idx","castElement","cast","path","options","callback","_options$abortEarly","_options$recursive","errors","sync","endEarly","abortEarly","spec","recursive","originalValue","isError","push","tests","item","innerOptions","strict","parent","index","_","cb","validate","next","schema","concat","clone","TypeError","message","test","name","exclusive","params","resolve","min","max","default","val","original","rejector","reject","a","filter","base","describe","isNullable","msg"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\r\n\r\nimport isAbsent from './util/isAbsent';\r\nimport isSchema from './util/isSchema';\r\nimport printValue from './util/printValue';\r\nimport { array as locale } from './locale';\r\nimport runTests from './util/runTests';\r\nimport ValidationError from './ValidationError';\r\nimport BaseSchema from './schema';\r\nexport function create(type) {\r\n  return new ArraySchema(type);\r\n}\r\nexport default class ArraySchema extends BaseSchema {\r\n  constructor(type) {\r\n    super({\r\n      type: 'array'\r\n    }); // `undefined` specifically means uninitialized, as opposed to\r\n    // \"no subtype\"\r\n\r\n    this.innerType = void 0;\r\n    this.innerType = type;\r\n    this.withMutation(() => {\r\n      this.transform(function (values) {\r\n        if (typeof values === 'string') try {\r\n          values = JSON.parse(values);\r\n        } catch (err) {\r\n          values = null;\r\n        }\r\n        return this.isType(values) ? values : null;\r\n      });\r\n    });\r\n  }\r\n\r\n  _typeCheck(v) {\r\n    return Array.isArray(v);\r\n  }\r\n\r\n  get _subType() {\r\n    return this.innerType;\r\n  }\r\n\r\n  _cast(_value, _opts) {\r\n    const value = super._cast(_value, _opts); //should ignore nulls here\r\n\r\n\r\n    if (!this._typeCheck(value) || !this.innerType) return value;\r\n    let isChanged = false;\r\n    const castArray = value.map((v, idx) => {\r\n      const castElement = this.innerType.cast(v, _extends({}, _opts, {\r\n        path: `${_opts.path || ''}[${idx}]`\r\n      }));\r\n\r\n      if (castElement !== v) {\r\n        isChanged = true;\r\n      }\r\n\r\n      return castElement;\r\n    });\r\n    return isChanged ? castArray : value;\r\n  }\r\n\r\n  _validate(_value, options = {}, callback) {\r\n    var _options$abortEarly, _options$recursive;\r\n\r\n    let errors = [];\r\n    let sync = options.sync;\r\n    let path = options.path;\r\n    let innerType = this.innerType;\r\n    let endEarly = (_options$abortEarly = options.abortEarly) != null ? _options$abortEarly : this.spec.abortEarly;\r\n    let recursive = (_options$recursive = options.recursive) != null ? _options$recursive : this.spec.recursive;\r\n    let originalValue = options.originalValue != null ? options.originalValue : _value;\r\n\r\n    super._validate(_value, options, (err, value) => {\r\n      if (err) {\r\n        if (!ValidationError.isError(err) || endEarly) {\r\n          return void callback(err, value);\r\n        }\r\n\r\n        errors.push(err);\r\n      }\r\n\r\n      if (!recursive || !innerType || !this._typeCheck(value)) {\r\n        callback(errors[0] || null, value);\r\n        return;\r\n      }\r\n\r\n      originalValue = originalValue || value; // #950 Ensure that sparse array empty slots are validated\r\n\r\n      let tests = new Array(value.length);\r\n\r\n      for (let idx = 0; idx < value.length; idx++) {\r\n        let item = value[idx];\r\n        let path = `${options.path || ''}[${idx}]`; // object._validate note for isStrict explanation\r\n\r\n        let innerOptions = _extends({}, options, {\r\n          path,\r\n          strict: true,\r\n          parent: value,\r\n          index: idx,\r\n          originalValue: originalValue[idx]\r\n        });\r\n\r\n        tests[idx] = (_, cb) => innerType.validate(item, innerOptions, cb);\r\n      }\r\n\r\n      runTests({\r\n        sync,\r\n        path,\r\n        value,\r\n        errors,\r\n        endEarly,\r\n        tests\r\n      }, callback);\r\n    });\r\n  }\r\n\r\n  clone(spec) {\r\n    const next = super.clone(spec);\r\n    next.innerType = this.innerType;\r\n    return next;\r\n  }\r\n\r\n  concat(schema) {\r\n    let next = super.concat(schema);\r\n    next.innerType = this.innerType;\r\n    if (schema.innerType) next.innerType = next.innerType ? // @ts-expect-error Lazy doesn't have concat()\r\n    next.innerType.concat(schema.innerType) : schema.innerType;\r\n    return next;\r\n  }\r\n\r\n  of(schema) {\r\n    // FIXME: this should return a new instance of array without the default to be\r\n    let next = this.clone();\r\n    if (!isSchema(schema)) throw new TypeError('`array.of()` sub-schema must be a valid yup schema not: ' + printValue(schema)); // FIXME(ts):\r\n\r\n    next.innerType = schema;\r\n    return next;\r\n  }\r\n\r\n  length(length, message = locale.length) {\r\n    return this.test({\r\n      message,\r\n      name: 'length',\r\n      exclusive: true,\r\n      params: {\r\n        length\r\n      },\r\n\r\n      test(value) {\r\n        return isAbsent(value) || value.length === this.resolve(length);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  min(min, message) {\r\n    message = message || locale.min;\r\n    return this.test({\r\n      message,\r\n      name: 'min',\r\n      exclusive: true,\r\n      params: {\r\n        min\r\n      },\r\n\r\n      // FIXME(ts): Array<typeof T>\r\n      test(value) {\r\n        return isAbsent(value) || value.length >= this.resolve(min);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  max(max, message) {\r\n    message = message || locale.max;\r\n    return this.test({\r\n      message,\r\n      name: 'max',\r\n      exclusive: true,\r\n      params: {\r\n        max\r\n      },\r\n\r\n      test(value) {\r\n        return isAbsent(value) || value.length <= this.resolve(max);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  ensure() {\r\n    return this.default(() => []).transform((val, original) => {\r\n      // We don't want to return `null` for nullable schema\r\n      if (this._typeCheck(val)) return val;\r\n      return original == null ? [] : [].concat(original);\r\n    });\r\n  }\r\n\r\n  compact(rejector) {\r\n    let reject = !rejector ? v => !!v : (v, i, a) => !rejector(v, i, a);\r\n    return this.transform(values => values != null ? values.filter(reject) : values);\r\n  }\r\n\r\n  describe() {\r\n    let base = super.describe();\r\n    if (this.innerType) base.innerType = this.innerType.describe();\r\n    return base;\r\n  }\r\n\r\n  nullable(isNullable = true) {\r\n    return super.nullable(isNullable);\r\n  }\r\n\r\n  defined() {\r\n    return super.defined();\r\n  }\r\n\r\n  required(msg) {\r\n    return super.required(msg);\r\n  }\r\n\r\n}\r\ncreate.prototype = ArraySchema.prototype; //\r\n// Interfaces\r\n//"]},"metadata":{},"sourceType":"module"}