{"ast":null,"code":"import addLeadingZeros from '../../addLeadingZeros/index.js';\n/*\r\n * |     | Unit                           |     | Unit                           |\r\n * |-----|--------------------------------|-----|--------------------------------|\r\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\r\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\r\n * |  d  | Day of month                   |  D  | Day of year                    |\r\n * |  e  | Local day of week              |  E  | Day of week                    |\r\n * |  f  |                                |  F* | Day of week in month           |\r\n * |  g* | Modified Julian day            |  G  | Era                            |\r\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\r\n * |  i! | ISO day of week                |  I! | ISO week of year               |\r\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\r\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\r\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\r\n * |  m  | Minute                         |  M  | Month                          |\r\n * |  n  |                                |  N  |                                |\r\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\r\n * |  p! | Long localized time            |  P! | Long localized date            |\r\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\r\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\r\n * |  s  | Second                         |  S  | Fraction of second             |\r\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\r\n * |  u  | Extended year                  |  U* | Cyclic year                    |\r\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\r\n * |  w  | Local week of year             |  W* | Week of month                  |\r\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\r\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\r\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\r\n *\r\n * Letters marked by * are not implemented but reserved by Unicode standard.\r\n *\r\n * Letters marked by ! are non-standard, but implemented by date-fns:\r\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\r\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\r\n *   i.e. 7 for Sunday, 1 for Monday, etc.\r\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\r\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\r\n *   `R` is supposed to be used in conjunction with `I` and `i`\r\n *   for universal ISO week-numbering date, whereas\r\n *   `Y` is supposed to be used in conjunction with `w` and `e`\r\n *   for week-numbering date specific to the locale.\r\n * - `P` is long localized date format\r\n * - `p` is long localized time format\r\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  }\n};\nexport default formatters;","map":{"version":3,"sources":["E:/College-ERP/node_modules/material-table/node_modules/date-fns/esm/_lib/format/lightFormatters/index.js"],"names":["addLeadingZeros","formatters","y","date","token","signedYear","getUTCFullYear","year","length","M","month","getUTCMonth","String","d","getUTCDate","a","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","s","getUTCSeconds"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,gCAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,UAAU,GAAG;AACf;AACAC,EAAAA,CAAC,EAAE,UAASC,IAAT,EAAeC,KAAf,EAAsB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAIC,UAAU,GAAGF,IAAI,CAACG,cAAL,EAAjB,CAVuB,CAWvB;;AACA,QAAIC,IAAI,GAAGF,UAAU,GAAG,CAAb,GAAiBA,UAAjB,GAA8B,IAAIA,UAA7C;AACA,WAAOL,eAAe,CAACI,KAAK,KAAK,IAAV,GAAiBG,IAAI,GAAG,GAAxB,GAA8BA,IAA/B,EAAqCH,KAAK,CAACI,MAA3C,CAAtB;AACD,GAhBc;AAkBf;AACAC,EAAAA,CAAC,EAAE,UAASN,IAAT,EAAeC,KAAf,EAAsB;AACvB,QAAIM,KAAK,GAAGP,IAAI,CAACQ,WAAL,EAAZ;AACA,WAAOP,KAAK,KAAK,GAAV,GAAgBQ,MAAM,CAACF,KAAK,GAAG,CAAT,CAAtB,GAAoCV,eAAe,CAACU,KAAK,GAAG,CAAT,EAAY,CAAZ,CAA1D;AACD,GAtBc;AAwBf;AACAG,EAAAA,CAAC,EAAE,UAASV,IAAT,EAAeC,KAAf,EAAsB;AACvB,WAAOJ,eAAe,CAACG,IAAI,CAACW,UAAL,EAAD,EAAoBV,KAAK,CAACI,MAA1B,CAAtB;AACD,GA3Bc;AA6Bf;AACAO,EAAAA,CAAC,EAAE,UAASZ,IAAT,EAAeC,KAAf,EAAsB;AACvB,QAAIY,kBAAkB,GAAGb,IAAI,CAACc,WAAL,KAAqB,EAArB,IAA2B,CAA3B,GAA+B,IAA/B,GAAsC,IAA/D;;AAEA,YAAQb,KAAR;AACE,WAAK,GAAL;AACA,WAAK,IAAL;AACA,WAAK,KAAL;AACE,eAAOY,kBAAkB,CAACE,WAAnB,EAAP;;AACF,WAAK,OAAL;AACE,eAAOF,kBAAkB,CAAC,CAAD,CAAzB;;AACF,WAAK,MAAL;AACA;AACE,eAAOA,kBAAkB,KAAK,IAAvB,GAA8B,MAA9B,GAAuC,MAA9C;AATJ;AAWD,GA5Cc;AA8Cf;AACAG,EAAAA,CAAC,EAAE,UAAShB,IAAT,EAAeC,KAAf,EAAsB;AACvB,WAAOJ,eAAe,CAACG,IAAI,CAACc,WAAL,KAAqB,EAArB,IAA2B,EAA5B,EAAgCb,KAAK,CAACI,MAAtC,CAAtB;AACD,GAjDc;AAmDf;AACAY,EAAAA,CAAC,EAAE,UAASjB,IAAT,EAAeC,KAAf,EAAsB;AACvB,WAAOJ,eAAe,CAACG,IAAI,CAACc,WAAL,EAAD,EAAqBb,KAAK,CAACI,MAA3B,CAAtB;AACD,GAtDc;AAwDf;AACAa,EAAAA,CAAC,EAAE,UAASlB,IAAT,EAAeC,KAAf,EAAsB;AACvB,WAAOJ,eAAe,CAACG,IAAI,CAACmB,aAAL,EAAD,EAAuBlB,KAAK,CAACI,MAA7B,CAAtB;AACD,GA3Dc;AA6Df;AACAe,EAAAA,CAAC,EAAE,UAASpB,IAAT,EAAeC,KAAf,EAAsB;AACvB,WAAOJ,eAAe,CAACG,IAAI,CAACqB,aAAL,EAAD,EAAuBpB,KAAK,CAACI,MAA7B,CAAtB;AACD;AAhEc,CAAjB;AAmEA,eAAeP,UAAf","sourcesContent":["import addLeadingZeros from '../../addLeadingZeros/index.js'\r\n\r\n/*\r\n * |     | Unit                           |     | Unit                           |\r\n * |-----|--------------------------------|-----|--------------------------------|\r\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\r\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\r\n * |  d  | Day of month                   |  D  | Day of year                    |\r\n * |  e  | Local day of week              |  E  | Day of week                    |\r\n * |  f  |                                |  F* | Day of week in month           |\r\n * |  g* | Modified Julian day            |  G  | Era                            |\r\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\r\n * |  i! | ISO day of week                |  I! | ISO week of year               |\r\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\r\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\r\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\r\n * |  m  | Minute                         |  M  | Month                          |\r\n * |  n  |                                |  N  |                                |\r\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\r\n * |  p! | Long localized time            |  P! | Long localized date            |\r\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\r\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\r\n * |  s  | Second                         |  S  | Fraction of second             |\r\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\r\n * |  u  | Extended year                  |  U* | Cyclic year                    |\r\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\r\n * |  w  | Local week of year             |  W* | Week of month                  |\r\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\r\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\r\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\r\n *\r\n * Letters marked by * are not implemented but reserved by Unicode standard.\r\n *\r\n * Letters marked by ! are non-standard, but implemented by date-fns:\r\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\r\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\r\n *   i.e. 7 for Sunday, 1 for Monday, etc.\r\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\r\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\r\n *   `R` is supposed to be used in conjunction with `I` and `i`\r\n *   for universal ISO week-numbering date, whereas\r\n *   `Y` is supposed to be used in conjunction with `w` and `e`\r\n *   for week-numbering date specific to the locale.\r\n * - `P` is long localized date format\r\n * - `p` is long localized time format\r\n */\r\n\r\nvar formatters = {\r\n  // Year\r\n  y: function(date, token) {\r\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\r\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\r\n    // |----------|-------|----|-------|-------|-------|\r\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\r\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\r\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\r\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\r\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\r\n\r\n    var signedYear = date.getUTCFullYear()\r\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\r\n    var year = signedYear > 0 ? signedYear : 1 - signedYear\r\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length)\r\n  },\r\n\r\n  // Month\r\n  M: function(date, token) {\r\n    var month = date.getUTCMonth()\r\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2)\r\n  },\r\n\r\n  // Day of the month\r\n  d: function(date, token) {\r\n    return addLeadingZeros(date.getUTCDate(), token.length)\r\n  },\r\n\r\n  // AM or PM\r\n  a: function(date, token) {\r\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am'\r\n\r\n    switch (token) {\r\n      case 'a':\r\n      case 'aa':\r\n      case 'aaa':\r\n        return dayPeriodEnumValue.toUpperCase()\r\n      case 'aaaaa':\r\n        return dayPeriodEnumValue[0]\r\n      case 'aaaa':\r\n      default:\r\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.'\r\n    }\r\n  },\r\n\r\n  // Hour [1-12]\r\n  h: function(date, token) {\r\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length)\r\n  },\r\n\r\n  // Hour [0-23]\r\n  H: function(date, token) {\r\n    return addLeadingZeros(date.getUTCHours(), token.length)\r\n  },\r\n\r\n  // Minute\r\n  m: function(date, token) {\r\n    return addLeadingZeros(date.getUTCMinutes(), token.length)\r\n  },\r\n\r\n  // Second\r\n  s: function(date, token) {\r\n    return addLeadingZeros(date.getUTCSeconds(), token.length)\r\n  }\r\n}\r\n\r\nexport default formatters\r\n"]},"metadata":{},"sourceType":"module"}