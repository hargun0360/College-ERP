{"ast":null,"code":"var _jsxFileName = \"E:\\\\project1\\\\project\\\\src\\\\Pages\\\\Auth\\\\Forgot\\\\ForgotPassword.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Image from '../../../Components/UI/Images/Image';\nimport SubmitButton from '../../../Components/UI/Button/Button';\nimport { useForm } from 'react-hook-form';\nimport '../Login/Login.css';\nimport illustrate from '../../../Assets/Imagesused/forgot.png';\nimport './Forgot.css';\nimport { useNavigate } from 'react-router-dom';\nimport AuthService from '../../../ApiServices/AuthService';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Forgotpassword = () => {\n  _s();\n\n  var _errors$email;\n\n  const navigate = useNavigate();\n  const mystate = useSelector(state => state.emailReducer.user);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm({\n    mode: \"onTouched\"\n  });\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n    console.log(data);\n    AuthService.forgot(mystate, data).then(res => {\n      if (res.status === 200) {\n        alert(\"otp sent\");\n        console.log(res);\n        navigate('/otp');\n      }\n    }).catch(error => {\n      console.log(error);\n      console.log(error.response);\n\n      if (error.response.status === 400) {\n        alert(\"invalid user\");\n      }\n\n      if (error.response.status === 500) {\n        alert(\"incorrect password\");\n      }\n\n      if (error.response.status === 302) {\n        alert(\"user is not admin\");\n      }\n    });\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"illustration-box\",\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        imge: illustrate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"Login-Box\",\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Heading2\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"Login-Heading\",\n            children: \"Forgot Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"para2\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please provide the email address you have been given to log in.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"type-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Label1\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input1\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              id: \"emailicon\",\n              className: \"fa fa-envelope icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-field\",\n              size: \"44\",\n              type: \"email\",\n              placeholder: \"example@akgec.ac.in\",\n              name: \"email\",\n              ...register(\"email\", {\n                required: \"**Email is required\",\n                pattern: {\n                  value: /^[a-zA-Z0-9_\\-]{4,}[@][a][k][g][e][c][\\.][a][c][\\.][i][n]$/i,\n                  message: \"**This is not a valid email\"\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"alerts\",\n            children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Button\",\n            children: /*#__PURE__*/_jsxDEV(SubmitButton, {\n              className: \"Next-Button\",\n              Label: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Forgotpassword, \"iEe/6KkgOBCb6tHYN4slcPIr7SQ=\", false, function () {\n  return [useNavigate, useSelector, useForm];\n});\n\n_c = Forgotpassword;\nexport default Forgotpassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forgotpassword\");","map":{"version":3,"sources":["E:/project1/project/src/Pages/Auth/Forgot/ForgotPassword.js"],"names":["React","Image","SubmitButton","useForm","illustrate","useNavigate","AuthService","useSelector","Forgotpassword","navigate","mystate","state","emailReducer","user","register","handleSubmit","formState","errors","reset","mode","onSubmit","data","e","preventDefault","console","log","forgot","then","res","status","alert","catch","error","response","required","pattern","value","message","email"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Image from '../../../Components/UI/Images/Image'\r\nimport SubmitButton from '../../../Components/UI/Button/Button'\r\nimport { useForm } from 'react-hook-form'\r\nimport '../Login/Login.css'\r\nimport illustrate from '../../../Assets/Imagesused/forgot.png'\r\nimport './Forgot.css'\r\nimport  {  useNavigate  } from 'react-router-dom'\r\nimport AuthService from '../../../ApiServices/AuthService'\r\nimport {useSelector} from 'react-redux'\r\nconst Forgotpassword = () => {\r\n    const navigate = useNavigate();\r\n    const mystate = useSelector((state)=>state.emailReducer.user);\r\n    const { register, handleSubmit, formState: { errors }, reset } = useForm({\r\n        mode: \"onTouched\"\r\n    });\r\n    const onSubmit = (data,e) => {\r\n        e.preventDefault();\r\n        console.log(data);\r\n        AuthService.forgot(mystate,data)\r\n        .then((res)=>{\r\n            if(res.status===200){\r\n                alert(\"otp sent\");\r\n                console.log(res);\r\n                navigate('/otp');\r\n            }\r\n            \r\n        }).catch((error)=>{\r\n            console.log(error);\r\n            console.log(error.response);\r\n            if(error.response.status === 400){\r\n                alert(\"invalid user\");\r\n            }\r\n            if(error.response.status === 500){\r\n                alert(\"incorrect password\");\r\n            }\r\n            if(error.response.status === 302){\r\n                alert(\"user is not admin\")\r\n            }\r\n        })\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <div className='Container'>\r\n            <div className='illustration-box'>\r\n                <Image imge={illustrate} />\r\n            </div>\r\n            <div>\r\n                <form className='Login-Box' onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className='Heading2'>\r\n                        <h1 className='Login-Heading'>Forgot Password</h1>\r\n                    </div>\r\n                    <div className='para2'>\r\n                        <p>Please provide the email address you have been given to log in.</p>\r\n                    </div>\r\n                    <div className='type-box'>\r\n                        <div className='Label1'>\r\n                            <label htmlFor=\"email\">\r\n                                Email\r\n                            </label>\r\n                        </div>\r\n                        <div className='input1'>\r\n                            <i id=\"emailicon\" className=\"fa fa-envelope icon\"></i>\r\n                            <input className='input-field' size={\"44\"} type=\"email\" placeholder='example@akgec.ac.in' name=\"email\" {...register(\"email\", { required: \"**Email is required\", pattern: { value: /^[a-zA-Z0-9_\\-]{4,}[@][a][k][g][e][c][\\.][a][c][\\.][i][n]$/i, message: \"**This is not a valid email\" } })}></input>\r\n                        </div>\r\n                        <p className='alerts'>{errors.email?.message}</p>\r\n                        <div className='Button'>\r\n                            <SubmitButton className=\"Next-Button\" Label=\"Next\" ></SubmitButton>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Forgotpassword\r\n"]},"metadata":{},"sourceType":"module"}