{"ast":null,"code":"var _jsxFileName = \"E:\\\\project1\\\\project\\\\src\\\\Pages\\\\Dashboard\\\\Admin\\\\Batches\\\\AddBatch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport SubmitButton from '../../../../Components/UI/Button/Button';\nimport { set, useForm } from 'react-hook-form';\nimport * as actionCreators from \"../../../../Service/Action/action\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport AuthService from '../../../../ApiServices/AuthService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddBatch = props => {\n  _s();\n\n  var _errors$batch, _errors$Semester;\n\n  const [year, setYear] = useState(null);\n  const [state, setState] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm({\n    mode: \"onTouched\"\n  });\n  const dispatch = useDispatch();\n\n  const onSubmit = (data, e) => {\n    if (year === null) {\n      setState(true);\n    } else {\n      const obj = {\n        batch: data.batch,\n        year: year,\n        sem: data.Semester\n      };\n      AuthService.AddBatch(obj).then(res => {\n        console.log(res);\n      }).catch();\n    }\n\n    e.preventDefault();\n  };\n\n  const handleClick = e => {\n    e.preventDefault();\n    props.setTrigger(false);\n  };\n\n  const handleYearDropdown = e => {\n    setYear(e.target.value);\n  };\n\n  const years = [{\n    id: \"1\",\n    yr: \"First\"\n  }, {\n    id: \"2\",\n    yr: \"Second\"\n  }, {\n    id: \"3\",\n    yr: \"Third\"\n  }, {\n    id: \"4\",\n    yr: \"Fourth\"\n  }];\n  return props.trigger ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Modal-box\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Batch-Form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Batch-Form-Heading\",\n        style: {\n          marginBottom: \"5%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Batch Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"Batch-Input\",\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"combine-input\",\n            style: {\n              marginBottom: \"3%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Label-form\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"Batch Name\",\n                children: \"Batch Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Input-detail\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input-field-form\",\n                size: \"34\",\n                type: \"text\",\n                name: \"batch\",\n                ...register(\"batch\", {\n                  required: \"**batch is required\"\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"alerts\",\n              children: (_errors$batch = errors.batch) === null || _errors$batch === void 0 ? void 0 : _errors$batch.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Year-Dropdown\",\n            style: {\n              margin: \"3% 0%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"year-drop-batch\",\n              onChange: handleYearDropdown,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                selected: \"selected\",\n                hidden: true,\n                children: \"Select Year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this), years.map(y => /*#__PURE__*/_jsxDEV(\"option\", {\n                name: y.id,\n                value: y.yr,\n                children: y.yr\n              }, y.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), state ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"alerts\",\n            children: \"**Year is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 34\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"combine-input\",\n            style: {\n              margin: \"5% 0%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Label-form\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"Semester\",\n                children: \"Semester\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Input-detail\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input-field-form\",\n                size: \"34\",\n                type: \"text\",\n                name: \"Semester\",\n                ...register(\"Semester\", {\n                  required: \"**Semester is required\",\n                  maxLength: {\n                    value: 1,\n                    message: \"**Semester cannot exceed more than 1 number\"\n                  },\n                  pattern: {\n                    value: /^[1-8]{1}$/i,\n                    message: \"**This is not a valid semester\"\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"alerts\",\n              children: (_errors$Semester = errors.Semester) === null || _errors$Semester === void 0 ? void 0 : _errors$Semester.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Add-Batch-btn\",\n            children: /*#__PURE__*/_jsxDEV(SubmitButton, {\n              className: \"Add-batch-button\",\n              Label: \"Add Batch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cross-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          id: \"crossed\",\n          className: \"fa fa-times\",\n          onClick: handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this) : null;\n};\n\n_s(AddBatch, \"/EBBPxOd1t4Q911AKTBlkVUZ+Bs=\", false, function () {\n  return [useForm, useDispatch];\n});\n\n_c = AddBatch;\nexport default AddBatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBatch\");","map":{"version":3,"sources":["E:/project1/project/src/Pages/Dashboard/Admin/Batches/AddBatch.js"],"names":["React","useState","useEffect","SubmitButton","set","useForm","actionCreators","useDispatch","useSelector","AuthService","AddBatch","props","year","setYear","state","setState","register","handleSubmit","formState","errors","reset","mode","dispatch","onSubmit","data","e","obj","batch","sem","Semester","then","res","console","log","catch","preventDefault","handleClick","setTrigger","handleYearDropdown","target","value","years","id","yr","trigger","marginBottom","required","message","margin","map","y","maxLength","pattern"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport SubmitButton from '../../../../Components/UI/Button/Button'\r\nimport { set, useForm } from 'react-hook-form'\r\nimport * as actionCreators from \"../../../../Service/Action/action\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport AuthService from '../../../../ApiServices/AuthService';\r\nconst AddBatch = (props) => {\r\n    const [year, setYear] = useState(null);\r\n    const [state, setState] = useState(false);\r\n    const { register, handleSubmit, formState: { errors }, reset } = useForm({\r\n        mode: \"onTouched\",\r\n    });\r\n    const dispatch = useDispatch();\r\n    const onSubmit = (data, e) => {\r\n        if(year===null){\r\n            setState(true);\r\n        }else{\r\n            const obj = {\r\n                batch:data.batch,\r\n                year:year,\r\n                sem:data.Semester,\r\n            }\r\n            AuthService.AddBatch(obj)\r\n            .then((res)=>{\r\n                console.log(res);\r\n            }).catch()\r\n        }\r\n        e.preventDefault();\r\n        \r\n    }\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        props.setTrigger(false);\r\n    }\r\n    const handleYearDropdown = (e) => {\r\n        setYear(e.target.value);\r\n    }\r\n    const years = [{ id: \"1\", yr: \"First\" }, { id: \"2\", yr: \"Second\" }, { id: \"3\", yr: \"Third\" }, { id: \"4\", yr: \"Fourth\" }];\r\n\r\n    return (props.trigger) ? (\r\n        <div className='Modal-box'>\r\n            <div className='Batch-Form'>\r\n                <div className='Batch-Form-Heading' style={{marginBottom:\"5%\"}}>\r\n                    <h2>Batch Details</h2>\r\n                </div>\r\n                <div>\r\n                    <form className='Batch-Input' onSubmit={handleSubmit(onSubmit)}>\r\n                        <div className='combine-input' style={{marginBottom:\"3%\"}}>\r\n                            <div className='Label-form'>\r\n                                <label htmlFor=\"Batch Name\">\r\n                                    Batch Name\r\n                                </label>\r\n                            </div>\r\n                            <div className='Input-detail'>\r\n                                <input className='input-field-form' size={\"34\"} type=\"text\" name=\"batch\" {...register(\"batch\", { required: \"**batch is required\", })}></input>\r\n                            </div>\r\n                            <p className='alerts'>{errors.batch?.message}</p>\r\n                        </div>\r\n                        <div className='Year-Dropdown' style={{margin:\"3% 0%\"}}>\r\n                            <select id=\"year-drop-batch\" onChange={handleYearDropdown}>\r\n                                <option selected=\"selected\" hidden>Select Year</option>\r\n                                {\r\n                                    years.map((y) => (\r\n                                        <option key={y.id} name={y.id} value={y.yr}>{y.yr}</option>\r\n                                    ))\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        {state ? <p className='alerts'>**Year is required</p> : null}\r\n                        <div className='combine-input' style={{margin:\"5% 0%\"}}>\r\n                            <div className='Label-form'>\r\n                                <label htmlFor=\"Semester\">\r\n                                    Semester\r\n                                </label>\r\n                            </div>\r\n                            <div className='Input-detail'>\r\n                                <input className='input-field-form' size={\"34\"} type=\"text\" name=\"Semester\" {...register(\"Semester\", { required: \"**Semester is required\", maxLength: { value: 1, message: \"**Semester cannot exceed more than 1 number\" }, pattern: { value: /^[1-8]{1}$/i, message: \"**This is not a valid semester\" } })}></input>\r\n                            </div>\r\n                            <p className='alerts'>{errors.Semester?.message}</p>\r\n                        </div>\r\n                        <div className='Add-Batch-btn'>\r\n                            <SubmitButton className=\"Add-batch-button\" Label=\"Add Batch\" ></SubmitButton>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className='cross-icon'>\r\n                    <i id=\"crossed\" className=\"fa fa-times\" onClick={handleClick} ></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : null;\r\n}\r\n\r\nexport default AddBatch\r\n"]},"metadata":{},"sourceType":"module"}