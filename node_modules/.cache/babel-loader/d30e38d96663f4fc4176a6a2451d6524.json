{"ast":null,"code":"var _jsxFileName = \"E:\\\\project1\\\\project\\\\src\\\\src\\\\Pages\\\\Dashboard\\\\Faculty\\\\Marks\\\\GiveMarks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Marks.css';\nimport '../../Admin/Batches/Batches.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GiveMarks = () => {\n  _s();\n\n  var _errors$opt, _errors$max;\n\n  const {\n    val\n  } = useSelector(state => state.toggle);\n  const [batch, setBatch] = useState(null);\n  const [batches, setBatches] = useState([]);\n  const [flag, setFlag] = useState(true);\n  const [sub, setSub] = useState(null);\n  const [year, setYear] = useState(null);\n  const years = [{\n    id: \"1\",\n    yr: \"First\"\n  }, {\n    id: \"2\",\n    yr: \"Second\"\n  }, {\n    id: \"3\",\n    yr: \"Third\"\n  }, {\n    id: \"4\",\n    yr: \"Fourth\"\n  }];\n  const [subject, setSubject] = useState([{\n    id: \"1\",\n    sub: \"maths\"\n  }, {\n    id: \"2\",\n    sub: \"maths\"\n  }, {\n    id: \"3\",\n    sub: \"maths\"\n  }, {\n    id: \"4\",\n    sub: \"maths\"\n  }]);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm({\n    mode: \"onTouched\"\n  });\n\n  const onSubmit = (data, e) => {\n    e.preventDefault(); // const obj={\n    //     date: today,\n    //     time: formatAMPM(new Date),\n    //     announcement:data.Announcement,\n    //     annfor:data.aopt,\n    // }\n    // console.log(obj);\n\n    reset();\n  };\n\n  const handleSubDropdown = e => {\n    setSub(e.target.value);\n    console.log(e.target.value);\n    setFlag(false);\n  };\n\n  const handleYearDropdown = e => {\n    setYear(e.target.value);\n    console.log(e.target.value);\n    setFlag(false);\n  };\n\n  const handleBatchDropdown = e => {\n    setBatch(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `Annoucement-Container ${val ? \"activate\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Batches-Detail\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Year-Dropdown\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"year-drop\",\n              onChange: handleYearDropdown,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                selected: \"selected\",\n                hidden: true,\n                children: \"Select Year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 15\n              }, this), years.map(y => /*#__PURE__*/_jsxDEV(\"option\", {\n                name: y.id,\n                value: y.id,\n                children: y.yr\n              }, y.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Subject-Dropdown\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"sub-drop\",\n              onChange: handleSubDropdown,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                selected: \"selected\",\n                hidden: true,\n                children: \"Select Subject\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 15\n              }, this), subject.map(y => /*#__PURE__*/_jsxDEV(\"option\", {\n                name: y.id,\n                value: y.sub,\n                children: y.sub\n              }, y.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Batch-Dropdown\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"batch-drop\",\n              onChange: handleBatchDropdown,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                selected: \"selected\",\n                hidden: true,\n                children: \"Select Batch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 15\n              }, this), batches.map(b => /*#__PURE__*/_jsxDEV(\"option\", {\n                name: b._id,\n                value: b._id,\n                children: b._id\n              }, b._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Exams-opt\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"st1-radio\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label-data1\",\n              htmlFor: \"field-Faculty\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"opt\", {\n                  required: \"**This field is required\"\n                }),\n                type: \"radio\",\n                name: \"opt\",\n                value: \"ST1\",\n                id: \"field-ST1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 15\n              }, this), \"ST1\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"st2-radio\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label-data1\",\n              htmlFor: \"field-Student\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"opt\", {\n                  required: \"**This field is required\"\n                }),\n                type: \"radio\",\n                name: \"opt\",\n                value: \"ST2\",\n                id: \"field-ST2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 15\n              }, this), \"ST2\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"PUT-radio\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label-data1\",\n              htmlFor: \"field-Both\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"opt\", {\n                  required: \"**This field is required\"\n                }),\n                type: \"radio\",\n                name: \"opt\",\n                value: \"PUT\",\n                id: \"field-PUT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 15\n              }, this), \"PUT\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            position: \"relative\",\n            top: \"12%\"\n          },\n          className: \"alerts\",\n          children: (_errors$opt = errors.opt) === null || _errors$opt === void 0 ? void 0 : _errors$opt.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exbox\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"combine-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Label-form\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"Maximum-Marks\",\n                children: \"Maximum Marks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Input-detail\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input-field-form\",\n                size: \"40\",\n                type: \"text\",\n                name: \"max\",\n                ...register(\"max\", {\n                  required: \"**Maximum Marks is required\",\n                  pattern: {\n                    value: /^[1-9][0-9]{1,}$/i,\n                    message: \"**This is not a valid marks\"\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"alerts\",\n              children: (_errors$max = errors.max) === null || _errors$max === void 0 ? void 0 : _errors$max.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exbox1\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Apply-Button\",\n            type: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Apply-text\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Apply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(GiveMarks, \"JeHvZGM9CnPfrE9gynCp/vpfPvs=\", false, function () {\n  return [useSelector, useForm];\n});\n\n_c = GiveMarks;\nexport default GiveMarks;\n\nvar _c;\n\n$RefreshReg$(_c, \"GiveMarks\");","map":{"version":3,"sources":["E:/project1/project/src/src/Pages/Dashboard/Faculty/Marks/GiveMarks.js"],"names":["React","useState","useDispatch","useSelector","useForm","GiveMarks","val","state","toggle","batch","setBatch","batches","setBatches","flag","setFlag","sub","setSub","year","setYear","years","id","yr","subject","setSubject","register","handleSubmit","formState","errors","reset","mode","onSubmit","data","e","preventDefault","handleSubDropdown","target","value","console","log","handleYearDropdown","handleBatchDropdown","map","y","b","_id","required","position","top","opt","message","pattern","max"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './Marks.css'\r\nimport '../../Admin/Batches/Batches.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useForm } from 'react-hook-form'\r\nconst GiveMarks = () => {\r\n  const { val } = useSelector((state) => state.toggle);\r\n  const [batch, setBatch] = useState(null);\r\n  const [batches, setBatches] = useState([]);\r\n  const [flag, setFlag] = useState(true);\r\n  const [sub, setSub] = useState(null);\r\n  const [year, setYear] = useState(null);\r\n  const years = [{ id: \"1\", yr: \"First\" }, { id: \"2\", yr: \"Second\" }, { id: \"3\", yr: \"Third\" }, { id: \"4\", yr: \"Fourth\" }];\r\n  const [subject, setSubject] = useState([{ id: \"1\", sub: \"maths\" },\r\n  { id: \"2\", sub: \"maths\" },\r\n  { id: \"3\", sub: \"maths\" },\r\n  { id: \"4\", sub: \"maths\" },])\r\n  const { register, handleSubmit, formState: { errors }, reset } = useForm({\r\n    mode: \"onTouched\"\r\n  });\r\n  const onSubmit = (data, e) => {\r\n    e.preventDefault();\r\n    // const obj={\r\n    //     date: today,\r\n    //     time: formatAMPM(new Date),\r\n    //     announcement:data.Announcement,\r\n    //     annfor:data.aopt,\r\n    // }\r\n    // console.log(obj);\r\n\r\n    reset();\r\n  }\r\n  const handleSubDropdown = (e) => {\r\n    setSub(e.target.value);\r\n    console.log(e.target.value);\r\n    setFlag(false);\r\n  }\r\n  const handleYearDropdown = (e) => {\r\n    setYear(e.target.value);\r\n    console.log(e.target.value);\r\n    setFlag(false);\r\n  }\r\n  const handleBatchDropdown = (e) => {\r\n    setBatch(e.target.value);\r\n  }\r\n  return (<>\r\n    <form onSubmit={handleSubmit(onSubmit)} >\r\n      <div className={`Annoucement-Container ${val ? \"activate\" : \"\"}`} >\r\n        <div className='Batches-Detail'>\r\n          <div className='Year-Dropdown'>\r\n            <select id=\"year-drop\" onChange={handleYearDropdown}>\r\n              <option selected=\"selected\" hidden>Select Year</option>\r\n              {\r\n                years.map((y) => (\r\n                  <option key={y.id} name={y.id} value={y.id}>{y.yr}</option>\r\n                ))\r\n              }\r\n            </select>\r\n          </div>\r\n          <div className='Subject-Dropdown'>\r\n            <select id=\"sub-drop\" onChange={handleSubDropdown}>\r\n              <option selected=\"selected\" hidden>Select Subject</option>\r\n              {\r\n                subject.map((y) => (\r\n                  <option key={y.id} name={y.id} value={y.sub}>{y.sub}</option>\r\n                ))\r\n              }\r\n            </select>\r\n          </div>\r\n          <div className='Batch-Dropdown'>\r\n            <select id=\"batch-drop\" onChange={handleBatchDropdown}>\r\n              <option selected=\"selected\" hidden>Select Batch</option>\r\n              {\r\n                batches.map((b) => (\r\n                  <option key={b._id} name={b._id} value={b._id}>{b._id}</option>\r\n                ))\r\n              }\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className='Exams-opt'>\r\n          <div className='st1-radio'>\r\n            <label className='label-data1' htmlFor=\"field-Faculty\">\r\n              <input\r\n                {...register(\"opt\", { required: \"**This field is required\" })}\r\n                type=\"radio\"\r\n                name=\"opt\"\r\n                value=\"ST1\"\r\n                id=\"field-ST1\"\r\n              />\r\n              ST1\r\n            </label>\r\n\r\n          </div>\r\n          <div className='st2-radio'>\r\n            <label className='label-data1' htmlFor=\"field-Student\">\r\n              <input\r\n                {...register(\"opt\", { required: \"**This field is required\" })}\r\n                type=\"radio\"\r\n                name=\"opt\"\r\n                value=\"ST2\"\r\n                id=\"field-ST2\"\r\n              />\r\n              ST2\r\n            </label>\r\n          </div>\r\n          <div className='PUT-radio'>\r\n            <label className='label-data1' htmlFor=\"field-Both\">\r\n              <input\r\n                {...register(\"opt\", { required: \"**This field is required\" })}\r\n                type=\"radio\"\r\n                name=\"opt\"\r\n                value=\"PUT\"\r\n                id=\"field-PUT\"\r\n              />\r\n              PUT\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <p style={{position:\"relative\",top:\"12%\",}} className='alerts'>{errors.opt?.message}</p>\r\n        <div className='exbox'>\r\n          <div className='combine-input'>\r\n            <div className='Label-form'>\r\n              <label htmlFor=\"Maximum-Marks\">\r\n                Maximum Marks\r\n              </label>\r\n            </div>\r\n            <div className='Input-detail'>\r\n              <input className='input-field-form' size={\"40\"} type=\"text\" name=\"max\" {...register(\"max\", { required: \"**Maximum Marks is required\", pattern: { value: /^[1-9][0-9]{1,}$/i, message: \"**This is not a valid marks\" }  })}></input>\r\n            </div>\r\n            <p className='alerts'>{errors.max?.message}</p>\r\n          </div>\r\n        </div>\r\n        <div className='exbox1'>\r\n          <button className='Apply-Button' type='submit' >\r\n            <div className='Apply-text'>\r\n              <h4>Apply</h4>\r\n            </div>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </>);\r\n};\r\n\r\nexport default GiveMarks;"]},"metadata":{},"sourceType":"module"}