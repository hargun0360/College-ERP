{"ast":null,"code":"var _jsxFileName = \"E:\\\\project1\\\\project\\\\src\\\\Pages\\\\Auth\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Image from '../../../Components/UI/Images/Image';\nimport SubmitButton from '../../../Components/UI/Button/Button';\nimport { useForm } from 'react-hook-form';\nimport illustrate from '../../../Assets/Imagesused/login.png';\nimport AuthService from '../../../ApiServices/AuthService';\nimport './Login.css';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actionCreators from \"../../../Service/Action/action\";\nimport { useNavigate } from 'react-router-dom';\nimport Toaster from '../../../Components/UI/Toaster/Toaster';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Spinner from '../../../Components/UI/Spinner/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  var _errors$email, _errors$password;\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const mystate = useSelector(state => state.emailReducer.user);\n  const [toggle, setToggle] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm({\n    mode: \"onTouched\",\n    defaultValues: {\n      email: \"Hargin2013021@akgec.ac.in\"\n    }\n  });\n  console.log(mystate);\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n    console.log(e);\n    let loginas = localStorage.getItem(\"userd\");\n    console.log(data);\n    setLoading(true);\n    AuthService.login(loginas, data).then(res => {\n      if (res.status === 201) {\n        setLoading(false);\n        console.log(res);\n        localStorage.setItem(\"user\", res.data.accessToken);\n        localStorage.setItem(\"ref_token\", res.data.refreshToken);\n        dispatch(actionCreators.userEmail(res.data.email));\n        navigate(\"/Dashboard\");\n      }\n    }).catch(error => {\n      console.log(error);\n      console.log(error.response);\n      setLoading(false);\n\n      if (error.response.status === 404) {\n        toast.error(\"Invalid User\");\n      } else if (error.response.status === 403) {\n        toast.warn(\"incorrect password\");\n      } else if (error.response.status === 302) {\n        toast.warn(\"user is not admin\");\n      } else {\n        navigate(\"/page404\");\n      }\n    });\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container\",\n    children: [loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"illustration-box\",\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        imge: illustrate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"Login-Box\",\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Heading1\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"Login-Heading\",\n            children: \"Welcome Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"para1\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please use the account you have been given to log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"type-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Label1\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input1\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              id: \"emailicon\",\n              className: \"fa fa-envelope icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-field\",\n              size: \"44\",\n              type: \"email\",\n              placeholder: \"example@akgec.ac.in\",\n              name: \"email\",\n              ...register(\"email\", {\n                required: \"**Email is required\",\n                pattern: {\n                  value: /^[a-zA-Z0-9_\\-]{4,}[@][a][k][g][e][c][\\.][a][c][\\.][i][n]$/i,\n                  message: \"**This is not a valid email\"\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"alerts\",\n            children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Label2\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input2\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              id: \"passlock\",\n              className: \"fa fa-lock icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), toggle ? /*#__PURE__*/_jsxDEV(\"i\", {\n              id: \"showpass\",\n              className: \"fa fa-eye-slash icon\",\n              onClick: () => {\n                setToggle(!toggle);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 40\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              id: \"showpass\",\n              className: \"fa fa-eye icon\",\n              onClick: () => {\n                setToggle(!toggle);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 134\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-field\",\n              size: \"44\",\n              type: toggle ? \"text\" : \"password\",\n              placeholder: \"Password\",\n              name: \"password\",\n              ...register(\"password\", {\n                required: \"**Password is required\",\n                minLength: {\n                  value: 8,\n                  message: \"**Password must be more than 8 characters\"\n                },\n                maxLength: {\n                  value: 14,\n                  message: \"**Password cannot exceed more than 14 characters\"\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"alerts\",\n            children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Button\",\n            children: /*#__PURE__*/_jsxDEV(SubmitButton, {\n              className: \"Login-Button\",\n              Label: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Forgot-text\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/forgot\",\n            className: \"Linker\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"Forgotpassword-text\",\n              children: \"Forgot Password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 63\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Toaster, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"rVFWOoOu3nuc8Gf/iILMLcyhweE=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["E:/project1/project/src/Pages/Auth/Login/Login.js"],"names":["React","useState","Image","SubmitButton","useForm","illustrate","AuthService","Link","useDispatch","useSelector","actionCreators","useNavigate","Toaster","toast","Spinner","Login","navigate","dispatch","mystate","state","emailReducer","user","toggle","setToggle","loading","setLoading","register","handleSubmit","formState","errors","reset","mode","defaultValues","email","console","log","onSubmit","data","e","preventDefault","loginas","localStorage","getItem","login","then","res","status","setItem","accessToken","refreshToken","userEmail","catch","error","response","warn","required","pattern","value","message","minLength","maxLength","password"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Image from '../../../Components/UI/Images/Image'\r\nimport SubmitButton from '../../../Components/UI/Button/Button'\r\nimport { useForm } from 'react-hook-form'\r\nimport illustrate from '../../../Assets/Imagesused/login.png'\r\nimport AuthService from '../../../ApiServices/AuthService'\r\nimport './Login.css'\r\nimport { Link } from 'react-router-dom'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport * as actionCreators from \"../../../Service/Action/action\";\r\nimport  {  useNavigate  } from 'react-router-dom'\r\nimport Toaster from '../../../Components/UI/Toaster/Toaster'\r\nimport {toast} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Spinner from '../../../Components/UI/Spinner/Spinner'\r\nconst Login = () => {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const mystate = useSelector((state)=>state.emailReducer.user)\r\n    const [toggle, setToggle] = useState(false);\r\n    const [loading, setLoading] = useState(false)\r\n    const { register, handleSubmit, formState: { errors }, reset } = useForm({\r\n        mode: \"onTouched\",\r\n        defaultValues: {\r\n            email:\"Hargin2013021@akgec.ac.in\"\r\n        },\r\n    });\r\n    console.log(mystate);\r\n    const onSubmit = (data,e) => {\r\n        e.preventDefault();\r\n        console.log(e);\r\n        let loginas=localStorage.getItem(\"userd\");\r\n        console.log(data);\r\n        setLoading(true);\r\n        AuthService.login(loginas,data)\r\n        .then((res)=>{\r\n            if(res.status===201){\r\n                setLoading(false);\r\n                console.log(res);\r\n            localStorage.setItem(\"user\",res.data.accessToken);\r\n            localStorage.setItem(\"ref_token\",res.data.refreshToken);\r\n            dispatch(actionCreators.userEmail(res.data.email));\r\n            navigate(\"/Dashboard\");\r\n            }\r\n            \r\n        }).catch((error)=>{\r\n            console.log(error);\r\n            console.log(error.response);\r\n            setLoading(false);\r\n            if(error.response.status === 404){\r\n                toast.error(\"Invalid User\");\r\n            }\r\n            else if(error.response.status === 403){\r\n                toast.warn(\"incorrect password\");\r\n            }\r\n            else if(error.response.status === 302){\r\n                toast.warn(\"user is not admin\");\r\n            }\r\n            else{\r\n                navigate(\"/page404\")\r\n            }\r\n\r\n        })\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <div className='Container'>\r\n        {\r\n            loading && <Spinner />\r\n        }\r\n            <div className='illustration-box'>\r\n                <Image imge={illustrate}/>\r\n            </div>\r\n            <div>\r\n                <form className='Login-Box' onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className='Heading1'>\r\n                        <h1 className='Login-Heading'>Welcome Back</h1>\r\n                    </div>\r\n                    <div className='para1'>\r\n                        <p>Please use the account you have been given to log in</p>\r\n                    </div>\r\n                    <div className='type-box'>\r\n                        <div className='Label1'>\r\n                            <label htmlFor=\"email\">\r\n                                Email\r\n                            </label>\r\n                        </div>\r\n                        <div className='input1'>\r\n                            <i id=\"emailicon\" className=\"fa fa-envelope icon\"></i>\r\n                            <input className='input-field' size={\"44\"} type=\"email\" placeholder='example@akgec.ac.in' name=\"email\" {...register(\"email\", { required: \"**Email is required\", pattern: { value: /^[a-zA-Z0-9_\\-]{4,}[@][a][k][g][e][c][\\.][a][c][\\.][i][n]$/i, message: \"**This is not a valid email\" } })}></input>\r\n                        </div>\r\n                        <p className='alerts'>{errors.email?.message}</p>\r\n                        <div className='Label2'>\r\n                            <label htmlFor=\"password\">\r\n                                Password\r\n                            </label>\r\n                        </div>\r\n                        <div className='input2'>\r\n                            <i id=\"passlock\" className=\"fa fa-lock icon\"></i>\r\n                            {\r\n                                toggle?<i id=\"showpass\" className=\"fa fa-eye-slash icon\" onClick={() => { setToggle(!toggle) }}></i>:<i id=\"showpass\" className=\"fa fa-eye icon\" onClick={() => { setToggle(!toggle) }}></i>\r\n                            }\r\n                            <input className='input-field' size={\"44\"} type={toggle ? \"text\" : \"password\"} placeholder='Password' name=\"password\" {...register(\"password\", { required: \"**Password is required\", minLength: { value: 8, message: \"**Password must be more than 8 characters\" }, maxLength: { value: 14, message: \"**Password cannot exceed more than 14 characters\" } })}></input>\r\n                        </div>\r\n                        <p className='alerts'>{errors.password?.message}</p>\r\n                        <div className='Button'>\r\n                            <SubmitButton className=\"Login-Button\" Label=\"Login\" ></SubmitButton>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Forgot-text'>\r\n                    <Link to={\"/forgot\"} className='Linker' > <p className='Forgotpassword-text'>Forgot Password?</p></Link>\r\n                       \r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n                <Toaster />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}