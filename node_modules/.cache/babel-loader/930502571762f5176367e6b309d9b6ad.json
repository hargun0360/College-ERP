{"ast":null,"code":"var _jsxFileName = \"E:\\\\project1\\\\project\\\\src\\\\src\\\\Pages\\\\Dashboard\\\\Faculty\\\\Marks\\\\GiveMarks.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Marks.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GiveMarks = () => {\n  _s();\n\n  const {\n    val\n  } = useSelector(state => state.toggle);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `Admin-Container ${val ? \"activate\" : \"\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Batches-Details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Year-Dropdown\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"year-drop\",\n            onChange: handleYearDropdown,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: \"selected\",\n              hidden: true,\n              children: \"Select Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 11,\n              columnNumber: 25\n            }, this), years.map(y => /*#__PURE__*/_jsxDEV(\"option\", {\n              name: y.id,\n              value: y.id,\n              children: y.yr\n            }, y.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Batch-Dropdown\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"batch-drop\",\n            onChange: handleBatchDropdown,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: \"selected\",\n              hidden: true,\n              children: \"Select Batch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 25\n            }, this), batches.map(b => /*#__PURE__*/_jsxDEV(\"option\", {\n              name: b._id,\n              value: b._id,\n              children: b._id\n            }, b._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(GiveMarks, \"oIukeVUhWhYhTUSSWsUIoeJpnUM=\", false, function () {\n  return [useSelector];\n});\n\n_c = GiveMarks;\nexport default GiveMarks;\n\nvar _c;\n\n$RefreshReg$(_c, \"GiveMarks\");","map":{"version":3,"sources":["E:/project1/project/src/src/Pages/Dashboard/Faculty/Marks/GiveMarks.js"],"names":["React","useDispatch","useSelector","GiveMarks","val","state","toggle","handleYearDropdown","years","map","y","id","yr","handleBatchDropdown","batches","b","_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAUF,WAAW,CAAEG,KAAD,IAAWA,KAAK,CAACC,MAAlB,CAA3B;AACF,sBAAQ;AAAA,2BACJ;AAAK,MAAA,SAAS,EAAG,mBAAkBF,GAAG,GAAG,UAAH,GAAgB,EAAG,EAAzD;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACU;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACI;AAAQ,YAAA,EAAE,EAAC,WAAX;AAAuB,YAAA,QAAQ,EAAEG,kBAAjC;AAAA,oCACI;AAAQ,cAAA,QAAQ,EAAC,UAAjB;AAA4B,cAAA,MAAM,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAGQC,KAAK,CAACC,GAAN,CAAWC,CAAD,iBACN;AAAmB,cAAA,IAAI,EAAEA,CAAC,CAACC,EAA3B;AAA+B,cAAA,KAAK,EAAED,CAAC,CAACC,EAAxC;AAAA,wBAA6CD,CAAC,CAACE;AAA/C,eAAaF,CAAC,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,oBADJ,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADV,eAWU;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACI;AAAQ,YAAA,EAAE,EAAC,YAAX;AAAyB,YAAA,QAAQ,EAAEE,mBAAnC;AAAA,oCACI;AAAQ,cAAA,QAAQ,EAAC,UAAjB;AAA4B,cAAA,MAAM,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAGQC,OAAO,CAACL,GAAR,CAAaM,CAAD,iBACR;AAAoB,cAAA,IAAI,EAAEA,CAAC,CAACC,GAA5B;AAAiC,cAAA,KAAK,EAAED,CAAC,CAACC,GAA1C;AAAA,wBAAgDD,CAAC,CAACC;AAAlD,eAAaD,CAAC,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA,oBADJ,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADI,mBAAR;AA0BD,CA5BD;;GAAMb,S;UACcD,W;;;KADdC,S;AA8BN,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport './Marks.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nconst GiveMarks = () => {\r\n    const { val } = useSelector((state) => state.toggle);\r\n  return (<>\r\n      <div className={`Admin-Container ${val ? \"activate\" : \"\"}`} > \r\n      <div className='Batches-Details'>\r\n                <div className='Year-Dropdown'>\r\n                    <select id=\"year-drop\" onChange={handleYearDropdown}>\r\n                        <option selected=\"selected\" hidden>Select Subject</option>\r\n                        {\r\n                            years.map((y) => (\r\n                                <option key={y.id} name={y.id} value={y.id}>{y.yr}</option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div className='Batch-Dropdown'>\r\n                    <select id=\"batch-drop\"  onChange={handleBatchDropdown}>\r\n                        <option selected=\"selected\" hidden>Select Batch</option>\r\n                        {\r\n                            batches.map((b) => (\r\n                                <option key={b._id} name={b._id} value={b._id}>{b._id}</option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n            </div>\r\n      </div>\r\n  </>);\r\n};\r\n\r\nexport default GiveMarks;"]},"metadata":{},"sourceType":"module"}