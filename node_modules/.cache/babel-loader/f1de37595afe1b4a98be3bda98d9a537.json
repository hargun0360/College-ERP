{"ast":null,"code":"const initialState = [];\nexport default function productReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"INCREMENT\":\n      return [...tate, {\n        data: action.incredata\n      }];\n\n    default:\n      return currentState;\n  }\n}","map":{"version":3,"sources":["E:/project1/project/src/Service/Reducer/Reducer.js"],"names":["initialState","productReducer","state","action","type","tate","data","incredata","currentState"],"mappings":"AAAA,MAAMA,YAAY,GAAC,EAAnB;AACA,eAAe,SAASC,cAAT,GAAkD;AAAA,MAA1BC,KAA0B,uEAApBF,YAAoB;AAAA,MAAPG,MAAO;;AAE7D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,WAAL;AACI,aAAM,CACF,GAAGC,IADD,EAEF;AAACC,QAAAA,IAAI,EAACH,MAAM,CAACI;AAAb,OAFE,CAAN;;AAIJ;AACI,aAAOC,YAAP;AAPR;AAUH","sourcesContent":["const initialState=[];\r\nexport default function productReducer(state=initialState,action){\r\n\r\n    switch(action.type){\r\n        case \"INCREMENT\" :\r\n            return[\r\n                ...tate,\r\n                {data:action.incredata}\r\n            ]\r\n        default:\r\n            return currentState\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}