{"ast":null,"code":"var _jsxFileName = \"E:\\\\project1\\\\project\\\\src\\\\Pages\\\\Auth\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Image from '../../../Components/UI/Images/Image';\nimport SubmitButton from '../../../Components/UI/Button/Button';\nimport { useForm } from 'react-hook-form';\nimport illustrate from '../../../Assets/Imagesused/login.png';\nimport AuthService from '../../../ApiServices/AuthService';\nimport './Login.css';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport * as actionCreators from \"../../Service/Action/action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  var _errors$email, _errors$password;\n\n  const dispatch = useDispatch();\n  const [toggle, setToggle] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm({\n    mode: \"onTouched\"\n  });\n\n  const onSubmit = data => {\n    let loginas = \"faculty\";\n    console.log(data);\n    AuthService.login(loginas, data).then(res => {\n      console.log(res);\n      localStorage.setItem(\"user\", res.data.accessToken);\n      localStorage.setItem(\"ref_token\", res.data.refreshToken);\n      dispatch(userEmail(res.data.email));\n    });\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"illustration-box\",\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        imge: illustrate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"Login-Box\",\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Heading1\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"Login-Heading\",\n            children: \"Welcome Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"para1\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please use the account you have been given to log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"type-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Label1\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input1\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              id: \"emailicon\",\n              className: \"fa fa-envelope icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-field\",\n              size: \"44\",\n              type: \"email\",\n              placeholder: \"example@akgec.ac.in\",\n              name: \"email\",\n              ...register(\"email\", {\n                required: \"**Email is required\",\n                pattern: {\n                  value: /^[a-zA-Z0-9_\\-]{4,}[@][a][k][g][e][c][\\.][a][c][\\.][i][n]$/i,\n                  message: \"**This is not a valid email\"\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"alerts\",\n            children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Label2\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input2\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              id: \"passlock\",\n              className: \"fa fa-lock icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              id: \"showpass\",\n              className: \"fa fa-eye icon\",\n              onClick: () => {\n                setToggle(!toggle);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-field\",\n              size: \"44\",\n              type: toggle ? \"text\" : \"password\",\n              placeholder: \"Password\",\n              name: \"password\",\n              ...register(\"password\", {\n                required: \"**Password is required\",\n                minLength: {\n                  value: 4,\n                  message: \"**Password must be more than 4 characters\"\n                },\n                maxLength: {\n                  value: 12,\n                  message: \"**Password cannot exceed more than 12 characters\"\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"alerts\",\n            children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Button\",\n            children: /*#__PURE__*/_jsxDEV(SubmitButton, {\n              className: \"Login-Button\",\n              Label: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Forgot-text\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/forgot\",\n            className: \"Linker\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"Forgotpassword-text\",\n              children: \"Forgot Password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 63\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"EoITB/pJgtwXx5szlYjEyxvKF/s=\", false, function () {\n  return [useDispatch, useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["E:/project1/project/src/Pages/Auth/Login/Login.js"],"names":["React","useState","Image","SubmitButton","useForm","illustrate","AuthService","Link","useDispatch","actionCreators","Login","dispatch","toggle","setToggle","register","handleSubmit","formState","errors","reset","mode","onSubmit","data","loginas","console","log","login","then","res","localStorage","setItem","accessToken","refreshToken","userEmail","email","required","pattern","value","message","minLength","maxLength","password"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Image from '../../../Components/UI/Images/Image'\r\nimport SubmitButton from '../../../Components/UI/Button/Button'\r\nimport { useForm } from 'react-hook-form'\r\nimport illustrate from '../../../Assets/Imagesused/login.png'\r\nimport AuthService from '../../../ApiServices/AuthService'\r\nimport './Login.css'\r\nimport { Link } from 'react-router-dom'\r\nimport {useDispatch} from 'react-redux'\r\nimport * as actionCreators from \"../../Service/Action/action\";\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [toggle, setToggle] = useState(false);\r\n    const { register, handleSubmit, formState: { errors }, reset } = useForm({\r\n        mode: \"onTouched\"\r\n    });\r\n    const onSubmit = (data) => {\r\n        let loginas=\"faculty\";\r\n        console.log(data);\r\n        AuthService.login(loginas,data)\r\n        .then((res)=>{\r\n            console.log(res);\r\n            localStorage.setItem(\"user\",res.data.accessToken);\r\n            localStorage.setItem(\"ref_token\",res.data.refreshToken);\r\n            dispatch(userEmail(res.data.email));\r\n        })\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <div className='Container'>\r\n            <div className='illustration-box'>\r\n                <Image imge={illustrate}/>\r\n            </div>\r\n            <div>\r\n                <form className='Login-Box' onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className='Heading1'>\r\n                        <h1 className='Login-Heading'>Welcome Back</h1>\r\n                    </div>\r\n                    <div className='para1'>\r\n                        <p>Please use the account you have been given to log in</p>\r\n                    </div>\r\n                    <div className='type-box'>\r\n                        <div className='Label1'>\r\n                            <label htmlFor=\"email\">\r\n                                Email\r\n                            </label>\r\n                        </div>\r\n                        <div className='input1'>\r\n                            <i id=\"emailicon\" className=\"fa fa-envelope icon\"></i>\r\n                            <input className='input-field' size={\"44\"} type=\"email\" placeholder='example@akgec.ac.in' name=\"email\" {...register(\"email\", { required: \"**Email is required\", pattern: { value: /^[a-zA-Z0-9_\\-]{4,}[@][a][k][g][e][c][\\.][a][c][\\.][i][n]$/i, message: \"**This is not a valid email\" } })}></input>\r\n                        </div>\r\n                        <p className='alerts'>{errors.email?.message}</p>\r\n                        <div className='Label2'>\r\n                            <label htmlFor=\"password\">\r\n                                Password\r\n                            </label>\r\n                        </div>\r\n                        <div className='input2'>\r\n                            <i id=\"passlock\" className=\"fa fa-lock icon\"></i>\r\n                            <i id=\"showpass\" className=\"fa fa-eye icon\" onClick={() => { setToggle(!toggle) }}></i>\r\n                            <input className='input-field' size={\"44\"} type={toggle ? \"text\" : \"password\"} placeholder='Password' name=\"password\" {...register(\"password\", { required: \"**Password is required\", minLength: { value: 4, message: \"**Password must be more than 4 characters\" }, maxLength: { value: 12, message: \"**Password cannot exceed more than 12 characters\" } })}></input>\r\n                        </div>\r\n                        <p className='alerts'>{errors.password?.message}</p>\r\n                        <div className='Button'>\r\n                            <SubmitButton className=\"Login-Button\" Label=\"Login\" ></SubmitButton>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Forgot-text'>\r\n                    <Link to={\"/forgot\"} className='Linker' > <p className='Forgotpassword-text'>Forgot Password?</p></Link>\r\n                       \r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}