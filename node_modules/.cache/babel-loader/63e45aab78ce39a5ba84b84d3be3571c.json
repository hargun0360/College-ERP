{"ast":null,"code":"'use strict';\n/* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */\n\n/* eslint-disable regexp/no-useless-quantifier -- testing */\n\nvar call = require('../internals/function-call');\n\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = require('../internals/to-string');\n\nvar regexpFlags = require('../internals/regexp-flags');\n\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\n\nvar shared = require('../internals/shared');\n\nvar create = require('../internals/object-create');\n\nvar getInternalState = require('../internals/internal-state').get;\n\nvar UNSUPPORTED_DOT_ALL = require('../internals/regexp-unsupported-dot-all');\n\nvar UNSUPPORTED_NCG = require('../internals/regexp-unsupported-ncg');\n\nvar nativeReplace = shared('native-string-replace', String.prototype.replace);\nvar nativeExec = RegExp.prototype.exec;\nvar patchedExec = nativeExec;\nvar charAt = uncurryThis(''.charAt);\nvar indexOf = uncurryThis(''.indexOf);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\n\nvar UPDATES_LAST_INDEX_WRONG = function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  call(nativeExec, re1, 'a');\n  call(nativeExec, re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n}();\n\nvar UNSUPPORTED_Y = stickyHelpers.BROKEN_CARET; // nonparticipating capturing group, copied from es5-shim's String#split patch.\n\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;\n\nif (PATCH) {\n  patchedExec = function exec(string) {\n    var re = this;\n    var state = getInternalState(re);\n    var str = toString(string);\n    var raw = state.raw;\n    var result, reCopy, lastIndex, match, i, object, group;\n\n    if (raw) {\n      raw.lastIndex = re.lastIndex;\n      result = call(patchedExec, raw, str);\n      re.lastIndex = raw.lastIndex;\n      return result;\n    }\n\n    var groups = state.groups;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = call(regexpFlags, re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = replace(flags, 'y', '');\n\n      if (indexOf(flags, 'g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = stringSlice(str, re.lastIndex); // Support anchored sticky behavior.\n\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt(str, re.lastIndex - 1) !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      } // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n\n\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n    match = call(nativeExec, sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = stringSlice(match.input, charsAdded);\n        match[0] = stringSlice(match[0], charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      call(nativeReplace, match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    if (match && groups) {\n      match.groups = object = create(null);\n\n      for (i = 0; i < groups.length; i++) {\n        group = groups[i];\n        object[group[0]] = match[group[1]];\n      }\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;","map":{"version":3,"sources":["E:/College-ERP/node_modules/core-js/internals/regexp-exec.js"],"names":["call","require","uncurryThis","toString","regexpFlags","stickyHelpers","shared","create","getInternalState","get","UNSUPPORTED_DOT_ALL","UNSUPPORTED_NCG","nativeReplace","String","prototype","replace","nativeExec","RegExp","exec","patchedExec","charAt","indexOf","stringSlice","slice","UPDATES_LAST_INDEX_WRONG","re1","re2","lastIndex","UNSUPPORTED_Y","BROKEN_CARET","NPCG_INCLUDED","undefined","PATCH","string","re","state","str","raw","result","reCopy","match","i","object","group","groups","sticky","flags","source","charsAdded","strCopy","multiline","input","index","length","global","arguments","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n/* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */\r\n/* eslint-disable regexp/no-useless-quantifier -- testing */\r\nvar call = require('../internals/function-call');\r\nvar uncurryThis = require('../internals/function-uncurry-this');\r\nvar toString = require('../internals/to-string');\r\nvar regexpFlags = require('../internals/regexp-flags');\r\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\r\nvar shared = require('../internals/shared');\r\nvar create = require('../internals/object-create');\r\nvar getInternalState = require('../internals/internal-state').get;\r\nvar UNSUPPORTED_DOT_ALL = require('../internals/regexp-unsupported-dot-all');\r\nvar UNSUPPORTED_NCG = require('../internals/regexp-unsupported-ncg');\r\n\r\nvar nativeReplace = shared('native-string-replace', String.prototype.replace);\r\nvar nativeExec = RegExp.prototype.exec;\r\nvar patchedExec = nativeExec;\r\nvar charAt = uncurryThis(''.charAt);\r\nvar indexOf = uncurryThis(''.indexOf);\r\nvar replace = uncurryThis(''.replace);\r\nvar stringSlice = uncurryThis(''.slice);\r\n\r\nvar UPDATES_LAST_INDEX_WRONG = (function () {\r\n  var re1 = /a/;\r\n  var re2 = /b*/g;\r\n  call(nativeExec, re1, 'a');\r\n  call(nativeExec, re2, 'a');\r\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\r\n})();\r\n\r\nvar UNSUPPORTED_Y = stickyHelpers.BROKEN_CARET;\r\n\r\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\r\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\r\n\r\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;\r\n\r\nif (PATCH) {\r\n  patchedExec = function exec(string) {\r\n    var re = this;\r\n    var state = getInternalState(re);\r\n    var str = toString(string);\r\n    var raw = state.raw;\r\n    var result, reCopy, lastIndex, match, i, object, group;\r\n\r\n    if (raw) {\r\n      raw.lastIndex = re.lastIndex;\r\n      result = call(patchedExec, raw, str);\r\n      re.lastIndex = raw.lastIndex;\r\n      return result;\r\n    }\r\n\r\n    var groups = state.groups;\r\n    var sticky = UNSUPPORTED_Y && re.sticky;\r\n    var flags = call(regexpFlags, re);\r\n    var source = re.source;\r\n    var charsAdded = 0;\r\n    var strCopy = str;\r\n\r\n    if (sticky) {\r\n      flags = replace(flags, 'y', '');\r\n      if (indexOf(flags, 'g') === -1) {\r\n        flags += 'g';\r\n      }\r\n\r\n      strCopy = stringSlice(str, re.lastIndex);\r\n      // Support anchored sticky behavior.\r\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt(str, re.lastIndex - 1) !== '\\n')) {\r\n        source = '(?: ' + source + ')';\r\n        strCopy = ' ' + strCopy;\r\n        charsAdded++;\r\n      }\r\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\r\n      // simulate the 'y' flag.\r\n      reCopy = new RegExp('^(?:' + source + ')', flags);\r\n    }\r\n\r\n    if (NPCG_INCLUDED) {\r\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\r\n    }\r\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\r\n\r\n    match = call(nativeExec, sticky ? reCopy : re, strCopy);\r\n\r\n    if (sticky) {\r\n      if (match) {\r\n        match.input = stringSlice(match.input, charsAdded);\r\n        match[0] = stringSlice(match[0], charsAdded);\r\n        match.index = re.lastIndex;\r\n        re.lastIndex += match[0].length;\r\n      } else re.lastIndex = 0;\r\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\r\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\r\n    }\r\n    if (NPCG_INCLUDED && match && match.length > 1) {\r\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\r\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\r\n      call(nativeReplace, match[0], reCopy, function () {\r\n        for (i = 1; i < arguments.length - 2; i++) {\r\n          if (arguments[i] === undefined) match[i] = undefined;\r\n        }\r\n      });\r\n    }\r\n\r\n    if (match && groups) {\r\n      match.groups = object = create(null);\r\n      for (i = 0; i < groups.length; i++) {\r\n        group = groups[i];\r\n        object[group[0]] = match[group[1]];\r\n      }\r\n    }\r\n\r\n    return match;\r\n  };\r\n}\r\n\r\nmodule.exports = patchedExec;\r\n"]},"metadata":{},"sourceType":"script"}