{"ast":null,"code":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function () {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n\n    var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n    err.name = 'Invariant Violation';\n    throw err;\n  }\n\n  ;\n  shim.isRequired = shim;\n\n  function getShim() {\n    return shim;\n  }\n\n  ; // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n  return ReactPropTypes;\n};","map":{"version":3,"sources":["E:/College-ERP/node_modules/material-table/node_modules/prop-types/factoryWithThrowingShims.js"],"names":["ReactPropTypesSecret","require","emptyFunction","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","isRequired","getShim","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,oBAAoB,GAAGC,OAAO,CAAC,4BAAD,CAAlC;;AAEA,SAASC,aAAT,GAAyB,CAAE;;AAE3BC,MAAM,CAACC,OAAP,GAAiB,YAAW;AAC1B,WAASC,IAAT,CAAcC,KAAd,EAAqBC,QAArB,EAA+BC,aAA/B,EAA8CC,QAA9C,EAAwDC,YAAxD,EAAsEC,MAAtE,EAA8E;AAC5E,QAAIA,MAAM,KAAKX,oBAAf,EAAqC;AACnC;AACA;AACD;;AACD,QAAIY,GAAG,GAAG,IAAIC,KAAJ,CACR,yFACA,+CADA,GAEA,gDAHQ,CAAV;AAKAD,IAAAA,GAAG,CAACE,IAAJ,GAAW,qBAAX;AACA,UAAMF,GAAN;AACD;;AAAA;AACDP,EAAAA,IAAI,CAACU,UAAL,GAAkBV,IAAlB;;AACA,WAASW,OAAT,GAAmB;AACjB,WAAOX,IAAP;AACD;;AAAA,GAjByB,CAkB1B;AACA;;AACA,MAAIY,cAAc,GAAG;AACnBC,IAAAA,KAAK,EAAEb,IADY;AAEnBc,IAAAA,IAAI,EAAEd,IAFa;AAGnBe,IAAAA,IAAI,EAAEf,IAHa;AAInBgB,IAAAA,MAAM,EAAEhB,IAJW;AAKnBiB,IAAAA,MAAM,EAAEjB,IALW;AAMnBkB,IAAAA,MAAM,EAAElB,IANW;AAOnBmB,IAAAA,MAAM,EAAEnB,IAPW;AASnBoB,IAAAA,GAAG,EAAEpB,IATc;AAUnBqB,IAAAA,OAAO,EAAEV,OAVU;AAWnBW,IAAAA,OAAO,EAAEtB,IAXU;AAYnBuB,IAAAA,UAAU,EAAEZ,OAZO;AAanBa,IAAAA,IAAI,EAAExB,IAba;AAcnByB,IAAAA,QAAQ,EAAEd,OAdS;AAenBe,IAAAA,KAAK,EAAEf,OAfY;AAgBnBgB,IAAAA,SAAS,EAAEhB,OAhBQ;AAiBnBiB,IAAAA,KAAK,EAAEjB,OAjBY;AAkBnBkB,IAAAA,KAAK,EAAElB;AAlBY,GAArB;AAqBAC,EAAAA,cAAc,CAACkB,cAAf,GAAgCjC,aAAhC;AACAe,EAAAA,cAAc,CAACmB,SAAf,GAA2BnB,cAA3B;AAEA,SAAOA,cAAP;AACD,CA7CD","sourcesContent":["/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n'use strict';\r\n\r\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\r\n\r\nfunction emptyFunction() {}\r\n\r\nmodule.exports = function() {\r\n  function shim(props, propName, componentName, location, propFullName, secret) {\r\n    if (secret === ReactPropTypesSecret) {\r\n      // It is still safe when called from React.\r\n      return;\r\n    }\r\n    var err = new Error(\r\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\r\n      'Use PropTypes.checkPropTypes() to call them. ' +\r\n      'Read more at http://fb.me/use-check-prop-types'\r\n    );\r\n    err.name = 'Invariant Violation';\r\n    throw err;\r\n  };\r\n  shim.isRequired = shim;\r\n  function getShim() {\r\n    return shim;\r\n  };\r\n  // Important!\r\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\r\n  var ReactPropTypes = {\r\n    array: shim,\r\n    bool: shim,\r\n    func: shim,\r\n    number: shim,\r\n    object: shim,\r\n    string: shim,\r\n    symbol: shim,\r\n\r\n    any: shim,\r\n    arrayOf: getShim,\r\n    element: shim,\r\n    instanceOf: getShim,\r\n    node: shim,\r\n    objectOf: getShim,\r\n    oneOf: getShim,\r\n    oneOfType: getShim,\r\n    shape: getShim,\r\n    exact: getShim\r\n  };\r\n\r\n  ReactPropTypes.checkPropTypes = emptyFunction;\r\n  ReactPropTypes.PropTypes = ReactPropTypes;\r\n\r\n  return ReactPropTypes;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}