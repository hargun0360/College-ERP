{"ast":null,"code":"import { usePreviousProps } from '@mui/utils';\nexport default function useBadge(props) {\n  var _props$anchorOrigin = props.anchorOrigin,\n      anchorOriginProp = _props$anchorOrigin === void 0 ? {\n    vertical: 'top',\n    horizontal: 'right'\n  } : _props$anchorOrigin,\n      badgeContentProp = props.badgeContent,\n      invisibleProp = props.invisible,\n      _props$max = props.max,\n      maxProp = _props$max === void 0 ? 99 : _props$max,\n      _props$showZero = props.showZero,\n      showZero = _props$showZero === void 0 ? false : _props$showZero,\n      _props$variant = props.variant,\n      variantProp = _props$variant === void 0 ? 'standard' : _props$variant;\n  var prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    badgeContent: badgeContentProp,\n    max: maxProp,\n    variant: variantProp\n  });\n  var invisible = invisibleProp;\n\n  if (invisibleProp == null && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n\n  var _ref = invisible ? prevProps : props,\n      _ref$anchorOrigin = _ref.anchorOrigin,\n      anchorOrigin = _ref$anchorOrigin === void 0 ? anchorOriginProp : _ref$anchorOrigin,\n      badgeContent = _ref.badgeContent,\n      _ref$max = _ref.max,\n      max = _ref$max === void 0 ? maxProp : _ref$max,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? variantProp : _ref$variant;\n\n  var displayValue = '';\n\n  if (variant !== 'dot') {\n    displayValue = badgeContent && Number(badgeContent) > max ? \"\".concat(max, \"+\") : badgeContent;\n  }\n\n  return {\n    anchorOrigin: anchorOrigin,\n    badgeContent: badgeContent,\n    invisible: invisible,\n    max: max,\n    variant: variant,\n    displayValue: displayValue\n  };\n}","map":{"version":3,"sources":["E:/project1/project/src/node_modules/@mui/base/BadgeUnstyled/useBadge.js"],"names":["usePreviousProps","useBadge","props","anchorOrigin","anchorOriginProp","vertical","horizontal","badgeContentProp","badgeContent","invisibleProp","invisible","max","maxProp","showZero","variant","variantProp","prevProps","displayValue","Number"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,YAAjC;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,4BAUIA,KAVJ,CACEC,YADF;AAAA,MACgBC,gBADhB,oCACmC;AAC/BC,IAAAA,QAAQ,EAAE,KADqB;AAE/BC,IAAAA,UAAU,EAAE;AAFmB,GADnC;AAAA,MAKgBC,gBALhB,GAUIL,KAVJ,CAKEM,YALF;AAAA,MAMaC,aANb,GAUIP,KAVJ,CAMEQ,SANF;AAAA,mBAUIR,KAVJ,CAOES,GAPF;AAAA,MAOOC,OAPP,2BAOiB,EAPjB;AAAA,wBAUIV,KAVJ,CAQEW,QARF;AAAA,MAQEA,QARF,gCAQa,KARb;AAAA,uBAUIX,KAVJ,CASEY,OATF;AAAA,MASWC,WATX,+BASyB,UATzB;AAWA,MAAMC,SAAS,GAAGhB,gBAAgB,CAAC;AACjCG,IAAAA,YAAY,EAAEC,gBADmB;AAEjCI,IAAAA,YAAY,EAAED,gBAFmB;AAGjCI,IAAAA,GAAG,EAAEC,OAH4B;AAIjCE,IAAAA,OAAO,EAAEC;AAJwB,GAAD,CAAlC;AAMA,MAAIL,SAAS,GAAGD,aAAhB;;AAEA,MAAIA,aAAa,IAAI,IAAjB,KAA0BF,gBAAgB,KAAK,CAArB,IAA0B,CAACM,QAA3B,IAAuCN,gBAAgB,IAAI,IAApB,IAA4BQ,WAAW,KAAK,KAA7G,CAAJ,EAAyH;AACvHL,IAAAA,SAAS,GAAG,IAAZ;AACD;;AAED,aAKIA,SAAS,GAAGM,SAAH,GAAed,KAL5B;AAAA,+BACEC,YADF;AAAA,MACEA,YADF,kCACiBC,gBADjB;AAAA,MAEEI,YAFF,QAEEA,YAFF;AAAA,sBAGEG,GAHF;AAAA,MAGEA,GAHF,yBAGQC,OAHR;AAAA,0BAIEE,OAJF;AAAA,MAIEA,OAJF,6BAIYC,WAJZ;;AAMA,MAAIE,YAAY,GAAG,EAAnB;;AAEA,MAAIH,OAAO,KAAK,KAAhB,EAAuB;AACrBG,IAAAA,YAAY,GAAGT,YAAY,IAAIU,MAAM,CAACV,YAAD,CAAN,GAAuBG,GAAvC,aAAgDA,GAAhD,SAAyDH,YAAxE;AACD;;AAED,SAAO;AACLL,IAAAA,YAAY,EAAZA,YADK;AAELK,IAAAA,YAAY,EAAZA,YAFK;AAGLE,IAAAA,SAAS,EAATA,SAHK;AAILC,IAAAA,GAAG,EAAHA,GAJK;AAKLG,IAAAA,OAAO,EAAPA,OALK;AAMLG,IAAAA,YAAY,EAAZA;AANK,GAAP;AAQD","sourcesContent":["import { usePreviousProps } from '@mui/utils';\r\nexport default function useBadge(props) {\r\n  const {\r\n    anchorOrigin: anchorOriginProp = {\r\n      vertical: 'top',\r\n      horizontal: 'right'\r\n    },\r\n    badgeContent: badgeContentProp,\r\n    invisible: invisibleProp,\r\n    max: maxProp = 99,\r\n    showZero = false,\r\n    variant: variantProp = 'standard'\r\n  } = props;\r\n  const prevProps = usePreviousProps({\r\n    anchorOrigin: anchorOriginProp,\r\n    badgeContent: badgeContentProp,\r\n    max: maxProp,\r\n    variant: variantProp\r\n  });\r\n  let invisible = invisibleProp;\r\n\r\n  if (invisibleProp == null && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\r\n    invisible = true;\r\n  }\r\n\r\n  const {\r\n    anchorOrigin = anchorOriginProp,\r\n    badgeContent,\r\n    max = maxProp,\r\n    variant = variantProp\r\n  } = invisible ? prevProps : props;\r\n  let displayValue = '';\r\n\r\n  if (variant !== 'dot') {\r\n    displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\r\n  }\r\n\r\n  return {\r\n    anchorOrigin,\r\n    badgeContent,\r\n    invisible,\r\n    max,\r\n    variant,\r\n    displayValue\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}