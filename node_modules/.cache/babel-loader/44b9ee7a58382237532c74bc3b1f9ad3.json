{"ast":null,"code":"var _jsxFileName = \"E:\\\\project1\\\\project\\\\src\\\\src\\\\Pages\\\\Dashboard\\\\Admin\\\\Faculty\\\\AddFaculty.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport SubmitButton from '../../../../Components/UI/Button/Button';\nimport { set, useForm } from 'react-hook-form';\nimport * as actionCreators from \"../../../../Service/Action/action\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Autocomplete from 'react-autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddFaculty = props => {\n  _s();\n\n  var _errors$Name, _errors$email, _errors$password;\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm({\n    mode: \"onTouched\"\n  });\n  const [value, setValue] = useState('');\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n  };\n\n  const handleClick = e => {\n    e.preventDefault();\n    props.setTrigger(false);\n  };\n\n  return props.trigger ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Modal-box1\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AddAdmin-Form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"EditDetails-Heading\",\n        style: {\n          marginBottom: \"5%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add Faculty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"EditDetails-Form-Input\",\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"combine-input\",\n            style: {\n              marginBottom: \"3%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Label-form\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"Full-Name\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Input-detail\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input-field-form\",\n                size: \"32\",\n                type: \"text\",\n                name: \"Name\",\n                ...register(\"Name\", {\n                  required: \"**Name is required\"\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"alerts\",\n              children: (_errors$Name = errors.Name) === null || _errors$Name === void 0 ? void 0 : _errors$Name.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"combine-input\",\n            style: {\n              margin: \"5% 0%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Label-form\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"Email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Input-detail1\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                id: \"emailicon1\",\n                className: \"fa fa-envelope icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input-field-form1\",\n                size: \"30\",\n                type: \"email\",\n                placeholder: \"example@akgec.ac.in\",\n                name: \"email\",\n                ...register(\"email\", {\n                  required: \"**Email is required\",\n                  pattern: {\n                    value: /^[a-zA-Z0-9_\\-]{4,}[@][a][k][g][e][c][\\.][a][c][\\.][i][n]$/i,\n                    message: \"**This is not a valid email\"\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"alerts\",\n              children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"combine-input\",\n            style: {\n              marginBottom: \"3%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Autocomplete // Items is the list of suggestions \n            // displayed while the user type\n            , {\n              items: [{\n                label: 'C++'\n              }, {\n                label: 'C'\n              }, {\n                label: 'Python'\n              }, {\n                label: 'JavaScript'\n              }, {\n                label: 'Julia'\n              }, {\n                label: 'Java'\n              }, {\n                label: 'Objective C'\n              }, {\n                label: 'C#'\n              }, {\n                label: 'Dart'\n              }, {\n                label: 'Perl'\n              }] // To handle the case that when\n              // the user type, suggested \n              // values should be independent\n              // of upper or lower case \n              ,\n              shouldItemRender: (item, value) => item.label.toLowerCase().indexOf(value.toLowerCase()) > -1,\n              getItemValue: item => item.label,\n              renderItem: (item, isHighlighted) =>\n              /*#__PURE__*/\n              // Styling to highlight selected item\n              _jsxDEV(\"div\", {\n                style: {\n                  background: isHighlighted ? '#bcf5bc' : 'white'\n                },\n                children: item.label\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this),\n              value: value // The onChange event watches for\n              // changes in an input field\n              ,\n              onChange: e => setValue(e.target.value) // To set the state variable to value\n              // selected from dropdown\n              ,\n              onSelect: val => setValue(val) // Added style in Autocomplete component\n              ,\n              inputProps: {\n                style: {\n                  width: '300px',\n                  height: '20px',\n                  background: '#e4f3f7',\n                  border: '2px outset lightgray'\n                },\n                placeholder: 'Search language'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"combine-input\",\n            style: {\n              marginBottom: \"3%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Label-form\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"Password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Input-detail\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input-field-form\",\n                size: \"32\",\n                type: \"text\",\n                name: \"password\",\n                ...register(\"password\", {\n                  required: \"**Password is required\"\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"alerts\",\n              children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"EditDetail-btn\",\n            children: /*#__PURE__*/_jsxDEV(SubmitButton, {\n              className: \"EditDetail-button\",\n              Label: \"Add Faculty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cross-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          id: \"crossed\",\n          className: \"fa fa-times\",\n          onClick: handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this) : null;\n};\n\n_s(AddFaculty, \"PEbYtDBSHEW1+l3gU2mrakDfZ6M=\", false, function () {\n  return [useForm];\n});\n\n_c = AddFaculty;\nexport default AddFaculty;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddFaculty\");","map":{"version":3,"sources":["E:/project1/project/src/src/Pages/Dashboard/Admin/Faculty/AddFaculty.js"],"names":["React","useState","useEffect","SubmitButton","set","useForm","actionCreators","useDispatch","useSelector","Autocomplete","AddFaculty","props","register","handleSubmit","formState","errors","reset","mode","value","setValue","onSubmit","data","e","preventDefault","handleClick","setTrigger","trigger","marginBottom","required","Name","message","margin","pattern","email","label","item","toLowerCase","indexOf","isHighlighted","background","id","target","val","style","width","height","border","placeholder","password"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport SubmitButton from '../../../../Components/UI/Button/Button'\r\nimport { set, useForm } from 'react-hook-form'\r\nimport * as actionCreators from \"../../../../Service/Action/action\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Autocomplete from 'react-autocomplete'\r\nconst AddFaculty = (props) => {\r\n    const { register, handleSubmit, formState: { errors }, reset } = useForm({\r\n        mode: \"onTouched\",\r\n    });\r\n    const [value, setValue] = useState('');\r\n    const onSubmit = (data, e) => {\r\n        e.preventDefault();\r\n\r\n    }\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        props.setTrigger(false);\r\n    }\r\n\r\n    return (props.trigger) ? (\r\n        <div className='Modal-box1'>\r\n            <div className='AddAdmin-Form'>\r\n                <div className='EditDetails-Heading' style={{ marginBottom: \"5%\" }}>\r\n                    <h2>Add Faculty</h2>\r\n                </div>\r\n                <div>\r\n                    <form className='EditDetails-Form-Input' onSubmit={handleSubmit(onSubmit)}>\r\n                        <div className='combine-input' style={{ marginBottom: \"3%\" }}>\r\n                            <div className='Label-form'>\r\n                                <label htmlFor=\"Full-Name\">\r\n                                    Name\r\n                                </label>\r\n                            </div>\r\n                            <div className='Input-detail'>\r\n                                <input className='input-field-form' size={\"32\"} type=\"text\" name=\"Name\" {...register(\"Name\", { required: \"**Name is required\", })}></input>\r\n                            </div>\r\n                            <p className='alerts'>{errors.Name?.message}</p>\r\n                        </div>\r\n                        <div className='combine-input' style={{ margin: \"5% 0%\" }}>\r\n                            <div className='Label-form'>\r\n                                <label htmlFor=\"Email\">\r\n                                    Email\r\n                                </label>\r\n                            </div>\r\n                            <div className='Input-detail1'>\r\n                                <i id=\"emailicon1\" className=\"fa fa-envelope icon\"></i>\r\n                                <input className='input-field-form1' size={\"30\"} type=\"email\" placeholder='example@akgec.ac.in' name=\"email\" {...register(\"email\", { required: \"**Email is required\", pattern: { value: /^[a-zA-Z0-9_\\-]{4,}[@][a][k][g][e][c][\\.][a][c][\\.][i][n]$/i, message: \"**This is not a valid email\" } })}></input>\r\n                            </div>\r\n                            <p className='alerts'>{errors.email?.message}</p>\r\n                        </div>\r\n                        <div className='combine-input' style={{ marginBottom: \"3%\" }}>\r\n                            <Autocomplete\r\n\r\n                                // Items is the list of suggestions \r\n                                // displayed while the user type\r\n                                items={[\r\n                                    { label: 'C++' },\r\n                                    { label: 'C' },\r\n                                    { label: 'Python' },\r\n                                    { label: 'JavaScript' },\r\n                                    { label: 'Julia' },\r\n                                    { label: 'Java' },\r\n                                    { label: 'Objective C' },\r\n                                    { label: 'C#' },\r\n                                    { label: 'Dart' },\r\n                                    { label: 'Perl' }\r\n                                ]}\r\n\r\n                                // To handle the case that when\r\n                                // the user type, suggested \r\n                                // values should be independent\r\n                                // of upper or lower case \r\n                                shouldItemRender={(item, value\r\n                                ) => item.label.toLowerCase()\r\n                                    .indexOf(value.toLowerCase()) > -1}\r\n                                getItemValue={item => item.label}\r\n                                renderItem={(item, isHighlighted) =>\r\n                                    // Styling to highlight selected item\r\n                                    <div style={{\r\n                                        background: isHighlighted ?\r\n                                            '#bcf5bc' : 'white'\r\n                                    }}\r\n                                        key={item.id}>\r\n                                        {item.label}\r\n                                    </div>\r\n                                }\r\n                                value={value}\r\n\r\n                                // The onChange event watches for\r\n                                // changes in an input field\r\n                                onChange={e => setValue(e.target.value)}\r\n\r\n                                // To set the state variable to value\r\n                                // selected from dropdown\r\n                                onSelect={(val) => setValue(val)}\r\n\r\n                                // Added style in Autocomplete component\r\n                                inputProps={{\r\n                                    style: {\r\n                                        width: '300px', height: '20px',\r\n                                        background: '#e4f3f7',\r\n                                        border: '2px outset lightgray'\r\n                                    },\r\n                                    placeholder: 'Search language'\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className='combine-input' style={{ marginBottom: \"3%\" }}>\r\n                            <div className='Label-form'>\r\n                                <label htmlFor=\"Password\">\r\n                                    Password\r\n                                </label>\r\n                            </div>\r\n                            <div className='Input-detail'>\r\n                                <input className='input-field-form' size={\"32\"} type=\"text\" name=\"password\" {...register(\"password\", { required: \"**Password is required\", })}></input>\r\n                            </div>\r\n                            <p className='alerts'>{errors.password?.message}</p>\r\n                        </div>\r\n                        <div className='EditDetail-btn'>\r\n                            <SubmitButton className=\"EditDetail-button\" Label=\"Add Faculty\" ></SubmitButton>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className='cross-icon'>\r\n                    <i id=\"crossed\" className=\"fa fa-times\" onClick={handleClick} ></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : null;\r\n}\r\n\r\nexport default AddFaculty\r\n"]},"metadata":{},"sourceType":"module"}