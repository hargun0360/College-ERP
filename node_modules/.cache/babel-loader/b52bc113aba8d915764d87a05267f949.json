{"ast":null,"code":"var _jsxFileName = \"E:\\\\project1\\\\project\\\\src\\\\Pages\\\\Dashboard\\\\Admin\\\\Batches\\\\AdminBatches.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Batches.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminBatches = () => {\n  _s();\n\n  const {\n    val\n  } = useSelector(state => state.toggle);\n  const [year, setYear] = useState(null);\n  const [batch, setBatch] = useState(null);\n  const years = [{\n    id: \"1\",\n    yr: \"First\"\n  }, {\n    id: \"2\",\n    yr: \"Second\"\n  }, {\n    id: \"3\",\n    yr: \"Third\"\n  }, {\n    id: \"4\",\n    yr: \"Fourth\"\n  }];\n\n  const handleYearDropdown = e => {\n    setYear(e.target.value);\n  };\n\n  const handleBatchDropdown = e => {\n    setBatch(e.target.value);\n  };\n\n  if (year) {\n    console.log(year);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `Admin-Container ${val ? \"activate\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Batches-Details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Year-Dropdown\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"year-drop\",\n          onChange: handleYearDropdown,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: \"selected\",\n            hidden: true,\n            children: \"Select Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), years.map(y => /*#__PURE__*/_jsxDEV(\"option\", {\n            name: y.id,\n            value: y.yr,\n            children: y.yr\n          }, y.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Batch-Dropdown\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"batch-drop\",\n          onChange: handleBatchDropdown,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: \"selected\",\n            hidden: true,\n            children: \"Select Batch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), batches.map(b => /*#__PURE__*/_jsxDEV(\"option\", {\n            name: b.id,\n            value: b.batch,\n            children: b.batch\n          }, b.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Apply-Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Add-Batch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Add-Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Student-Info-Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminBatches, \"MLzgNLZzuQUgSZB3okn0HwqBUwE=\", false, function () {\n  return [useSelector];\n});\n\n_c = AdminBatches;\nexport default AdminBatches;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminBatches\");","map":{"version":3,"sources":["E:/project1/project/src/Pages/Dashboard/Admin/Batches/AdminBatches.js"],"names":["React","useState","useSelector","useDispatch","AdminBatches","val","state","toggle","year","setYear","batch","setBatch","years","id","yr","handleYearDropdown","e","target","value","handleBatchDropdown","console","log","map","y","batches","b"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport './Batches.css'\r\nconst AdminBatches = () => {\r\n    const { val } = useSelector((state) => state.toggle);\r\n    const [year,setYear] = useState(null);\r\n    const [batch,setBatch] = useState(null);\r\n    const years= [{id:\"1\",yr:\"First\"},{id:\"2\",yr:\"Second\"},{id:\"3\",yr:\"Third\"},{id:\"4\",yr:\"Fourth\"}];\r\n    const handleYearDropdown = (e)=>{\r\n            setYear(e.target.value);\r\n    }\r\n    const handleBatchDropdown = (e)=>{\r\n        setBatch(e.target.value);\r\n}\r\n    if(year){\r\n        console.log(year);\r\n    }\r\n    return (\r\n        <div className={`Admin-Container ${val ? \"activate\" : \"\"}`}>\r\n            <div className='Batches-Details'>\r\n                <div className='Year-Dropdown'>\r\n                    <select id=\"year-drop\" onChange={handleYearDropdown}>\r\n                        <option selected=\"selected\" hidden>Select Year</option>\r\n                        {\r\n                            years.map((y)=>(\r\n                                <option key={y.id} name={y.id} value={y.yr}>{y.yr}</option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div className='Batch-Dropdown'>\r\n                <select id=\"batch-drop\" onChange={handleBatchDropdown}>\r\n                        <option selected=\"selected\" hidden>Select Batch</option>\r\n                        {\r\n                            batches.map((b)=>(\r\n                                <option key={b.id} name={b.id} value={b.batch}>{b.batch}</option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div className='Apply-Button'>\r\n\r\n                </div>\r\n                <div className='Add-Batch'>\r\n\r\n                </div>\r\n            </div>\r\n            <div className='Add-Student'>\r\n\r\n            </div>\r\n            <div className='Student-Info-Table'>\r\n\r\n            </div>\r\n        </div>);\r\n};\r\n\r\nexport default AdminBatches;\r\n"]},"metadata":{},"sourceType":"module"}